Job identifier is 2287472.jobmgr1
Working directory is /home/jc475572/testscripts/angsdtest

bowtie2 v2.4.4 software is available in an apptainer.
To view the list of aliases (shorthand) available, use the command:
	module show bowtie2/2.4.4
If the command(s) you require are not available as an alias, you
can request one or more be added.

The apptainer you could be using is:
	/sw/containers/bowtie2-2.4.4.sif

If you want/need higher level control, see relevant man pages:
	man singularity-run
	man singularity-exec

Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:43
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:46
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:14239:68214 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:14239:68214 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1107:17683:75954 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1107:17683:75954 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:5695:56873 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:5695:56873 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:15490:65946 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:15490:65946 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:4983:31875 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:4983:31875 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:13477:52083 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:13477:52083 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:21085:31387 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:21085:31387 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1209:4570:95115 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1209:4570:95115 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:10767:55143 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:10767:55143 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1212:13653:64517 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1212:13653:64517 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:1952:21296 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:1952:21296 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1303:8602:33042 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1303:8602:33042 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:3392:36622 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:3392:36622 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:2918:54454 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:2918:54454 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:5308:85499 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:5308:85499 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:13273:42908 1:N:0:GTTCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:13273:42908 1:N:0:GTTCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1311:16943:55915 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1311:16943:55915 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1315:17505:19131 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1315:17505:19131 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:7687:64340 1:N:0:GTCAGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:7687:64340 1:N:0:GTCAGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:18454:86566 1:N:0:GTCCGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:18454:86566 1:N:0:GTCCGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:8324:79457 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:8324:79457 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2107:7413:9210 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2107:7413:9210 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:20051:8881 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:20051:8881 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2203:20717:44660 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2203:20717:44660 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:11328:87507 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:11328:87507 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2301:11067:15343 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2301:11067:15343 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2301:1425:92974 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2301:1425:92974 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2303:3402:15325 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2303:3402:15325 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2303:11733:24033 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2303:11733:24033 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2304:17763:74399 1:N:0:GTCGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2304:17763:74399 1:N:0:GTCGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2305:11852:81090 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2305:11852:81090 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:4552:19626 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:4552:19626 1:N:0:GTCCGC' because it was < 2 characters long
9383833 reads; of these:
  9383833 (100.00%) were unpaired; of these:
    2472739 (26.35%) aligned 0 times
    3186377 (33.96%) aligned exactly 1 time
    3724717 (39.69%) aligned >1 times
73.65% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:35
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:43
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:46
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:3962:44202 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:3962:44202 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:4428:98905 1:N:0:GTGTAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:4428:98905 1:N:0:GTGTAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:8477:3553 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:8477:3553 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1201:17495:74395 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1201:17495:74395 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1202:10462:20100 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1202:10462:20100 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:4890:2031 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:4890:2031 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:13138:98862 1:N:0:GAGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:13138:98862 1:N:0:GAGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:4609:74329 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:4609:74329 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1303:15587:22459 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1303:15587:22459 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:3399:2849 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:3399:2849 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:18081:63772 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:18081:63772 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:7772:14575 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:7772:14575 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:15759:60973 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:15759:60973 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:4047:49880 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:4047:49880 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:5173:44011 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:5173:44011 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1312:16617:79712 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1312:16617:79712 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:2963:69972 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:2963:69972 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:10273:9328 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:10273:9328 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:6263:18460 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:6263:18460 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:16904:49802 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:16904:49802 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:11558:72390 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:11558:72390 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2113:20067:9269 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2113:20067:9269 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2115:21003:41598 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2115:21003:41598 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:3368:28572 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:3368:28572 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:18043:63923 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:18043:63923 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:5732:97223 1:N:0:CTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:5732:97223 1:N:0:CTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2308:4697:16158 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2308:4697:16158 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2308:2676:47299 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2308:2676:47299 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2310:9829:97677 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2310:9829:97677 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2311:19453:7473 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2311:19453:7473 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:1781:40337 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:1781:40337 1:N:0:GTGAAA' because it was < 2 characters long
9653850 reads; of these:
  9653850 (100.00%) were unpaired; of these:
    2714076 (28.11%) aligned 0 times
    3842931 (39.81%) aligned exactly 1 time
    3096843 (32.08%) aligned >1 times
71.89% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:40
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:07
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:05
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:15201:2427 1:N:0:GTGGCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:15201:2427 1:N:0:GTGGCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:12961:35102 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:12961:35102 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:10459:58887 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:10459:58887 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:13989:84494 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:13989:84494 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:4897:88892 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:4897:88892 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1113:3111:31169 1:N:0:GCGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1113:3111:31169 1:N:0:GCGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:17164:12976 1:N:0:GTCGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:17164:12976 1:N:0:GTCGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1116:11248:15579 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1116:11248:15579 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:21019:90281 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:21019:90281 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1212:2785:95091 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1212:2785:95091 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:6385:87537 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:6385:87537 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:2303:73512 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:2303:73512 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:20471:2811 1:N:0:GTGGAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:20471:2811 1:N:0:GTGGAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:2249:97249 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:2249:97249 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:2963:74611 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:2963:74611 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:14392:5794 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:14392:5794 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:18677:90485 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:18677:90485 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:8860:36862 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:8860:36862 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:11058:79097 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:11058:79097 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:11624:35025 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:11624:35025 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:6304:22996 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:6304:22996 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:16526:49324 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:16526:49324 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:8520:57471 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:8520:57471 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2211:19593:5871 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2211:19593:5871 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:9931:17746 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:9931:17746 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2215:17856:30171 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2215:17856:30171 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2314:5053:60255 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2314:5053:60255 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:18935:44963 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:18935:44963 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:7605:72484 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:7605:72484 1:N:0:GTGGCC' because it was < 2 characters long
9882002 reads; of these:
  9882002 (100.00%) were unpaired; of these:
    3078725 (31.15%) aligned 0 times
    3841119 (38.87%) aligned exactly 1 time
    2962158 (29.98%) aligned >1 times
68.85% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:39
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:52
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:48
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:10880:32880 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:10880:32880 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:16597:35041 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:16597:35041 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:4794:87842 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:4794:87842 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1105:17722:81427 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1105:17722:81427 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:10501:51599 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:10501:51599 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:17787:54820 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:17787:54820 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:6789:59907 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:6789:59907 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:3697:86199 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:3697:86199 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:11702:58147 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:11702:58147 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1204:16890:93223 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1204:16890:93223 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:14961:89127 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1305:14961:89127 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:12037:15401 1:N:0:GTGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:12037:15401 1:N:0:GTGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:9950:59869 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1316:9950:59869 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:11484:85954 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:11484:85954 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2106:6641:92822 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2106:6641:92822 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2106:7512:98570 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2106:7512:98570 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:16143:81777 1:N:0:GGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:16143:81777 1:N:0:GGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:2775:92918 1:N:0:GTTTAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:2775:92918 1:N:0:GTTTAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:16334:42892 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:16334:42892 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:8703:51179 1:N:0:TTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:8703:51179 1:N:0:TTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:17477:50280 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:17477:50280 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2203:18846:95654 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2203:18846:95654 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:6988:72988 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:6988:72988 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:7992:17670 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2207:7992:17670 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2212:2243:17889 1:N:0:GGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2212:2243:17889 1:N:0:GGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2216:17989:97318 1:N:0:TTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2216:17989:97318 1:N:0:TTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2302:8235:22750 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2302:8235:22750 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:18727:48132 1:N:0:GTTTTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:18727:48132 1:N:0:GTTTTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:11733:83846 1:N:0:GGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2312:11733:83846 1:N:0:GGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:2324:37323 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2315:2324:37323 1:N:0:GTTTCG' because it was < 2 characters long
9743692 reads; of these:
  9743692 (100.00%) were unpaired; of these:
    2932594 (30.10%) aligned 0 times
    3511229 (36.04%) aligned exactly 1 time
    3299869 (33.87%) aligned >1 times
69.90% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:35
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:53
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:55
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:18837:41027 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:18837:41027 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:18173:49777 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:18173:49777 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:5967:12637 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:5967:12637 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:9481:4118 1:N:0:AGGCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:9481:4118 1:N:0:AGGCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:10591:5898 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:10591:5898 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:5839:11939 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:5839:11939 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1112:11909:11679 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1112:11909:11679 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:6077:10968 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:6077:10968 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1116:18434:36987 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1116:18434:36987 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:15573:45290 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:15573:45290 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1216:16284:94561 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1216:16284:94561 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:18195:23882 1:N:0:AGTCCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:18195:23882 1:N:0:AGTCCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1304:15045:30211 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1304:15045:30211 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1306:3733:11281 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1306:3733:11281 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:18198:81402 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:18198:81402 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:12264:19512 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:12264:19512 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2102:12716:84295 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2102:12716:84295 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:4309:82217 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:4309:82217 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:12748:28689 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:12748:28689 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2110:6940:74530 1:N:0:AGGCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2110:6940:74530 1:N:0:AGGCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2116:3879:86992 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2116:3879:86992 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:8545:51730 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:8545:51730 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2206:20663:72715 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2206:20663:72715 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:7021:72464 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:7021:72464 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2214:11929:64011 1:N:0:AGGCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2214:11929:64011 1:N:0:AGGCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:15456:32648 1:N:0:AGTCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:15456:32648 1:N:0:AGTCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2308:9418:85907 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2308:9418:85907 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:20028:53446 1:N:0:GGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:20028:53446 1:N:0:GGTCAA' because it was < 2 characters long
8815341 reads; of these:
  8815341 (100.00%) were unpaired; of these:
    2646386 (30.02%) aligned 0 times
    3580969 (40.62%) aligned exactly 1 time
    2587986 (29.36%) aligned >1 times
69.98% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:39
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:41
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:11240:39842 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:11240:39842 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:9839:92505 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:9839:92505 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:4502:72638 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:4502:72638 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:14271:50944 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:14271:50944 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:8669:5277 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:8669:5277 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:2498:6318 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:2498:6318 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:12953:53530 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:12953:53530 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1211:17224:67694 1:N:0:AGGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1211:17224:67694 1:N:0:AGGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:14508:24861 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:14508:24861 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:8620:47603 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:8620:47603 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:17108:56570 1:N:0:AGGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:17108:56570 1:N:0:AGGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:10687:22382 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:10687:22382 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:2994:54954 1:N:0:ATTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:2994:54954 1:N:0:ATTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:14666:47191 1:N:0:AGTACC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:14666:47191 1:N:0:AGTACC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2209:17133:55259 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2209:17133:55259 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:16375:37987 1:N:0:AGTGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:16375:37987 1:N:0:AGTGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2314:20704:70974 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2314:20704:70974 1:N:0:AGTTCC' because it was < 2 characters long
8881483 reads; of these:
  8881483 (100.00%) were unpaired; of these:
    2792414 (31.44%) aligned 0 times
    3537291 (39.83%) aligned exactly 1 time
    2551778 (28.73%) aligned >1 times
68.56% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:39
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:8331:78787 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:8331:78787 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:11029:96767 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1101:11029:96767 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:7009:49334 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:7009:49334 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:5923:80263 1:N:0:ATGTCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:5923:80263 1:N:0:ATGTCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:1573:99449 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:1573:99449 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:13868:37391 1:N:0:AGGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:13868:37391 1:N:0:AGGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1111:6865:66031 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1111:6865:66031 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:14148:83742 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:14148:83742 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:17714:96710 1:N:0:GTGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:17714:96710 1:N:0:GTGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1216:1151:60436 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1216:1151:60436 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:15949:79154 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:15949:79154 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1308:16228:17432 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1308:16228:17432 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:20816:34393 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:20816:34393 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:12303:57154 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:12303:57154 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:11361:3204 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:11361:3204 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:7440:94713 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:7440:94713 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:13817:10315 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:13817:10315 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:15910:41957 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:15910:41957 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:15127:14345 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:15127:14345 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:6981:48600 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:6981:48600 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:16239:32187 1:N:0:ATGCCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:16239:32187 1:N:0:ATGCCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:14670:95815 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:14670:95815 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:10915:16134 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:10915:16134 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:6804:98309 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:6804:98309 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2301:17514:55821 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2301:17514:55821 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:14402:60908 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:14402:60908 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:3179:5442 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:3179:5442 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:10080:43230 1:N:0:ATGTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:10080:43230 1:N:0:ATGTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:6420:94088 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:6420:94088 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:18725:81606 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:18725:81606 1:N:0:ATGTCA' because it was < 2 characters long
9245648 reads; of these:
  9245648 (100.00%) were unpaired; of these:
    3014310 (32.60%) aligned 0 times
    3623338 (39.19%) aligned exactly 1 time
    2608000 (28.21%) aligned >1 times
67.40% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:42
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:19107:20374 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:19107:20374 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:17097:76461 1:N:0:CCTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:17097:76461 1:N:0:CCTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1108:11143:7405 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1108:11143:7405 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:18408:47782 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1114:18408:47782 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:8897:34624 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:8897:34624 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:18417:8751 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:18417:8751 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:7903:61412 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:7903:61412 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1212:16313:92563 1:N:0:CCGCCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1212:16313:92563 1:N:0:CCGCCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:8942:41731 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1213:8942:41731 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:11819:98037 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:11819:98037 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:9617:100730 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:9617:100730 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:15275:14963 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:15275:14963 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:12668:35551 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:12668:35551 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:14596:91201 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:14596:91201 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2114:13065:59124 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2114:13065:59124 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:9644:24984 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:9644:24984 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2211:17661:82798 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2211:17661:82798 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2212:10578:89398 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2212:10578:89398 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:12831:5659 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:12831:5659 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:19880:22807 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:19880:22807 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:6012:94440 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:6012:94440 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2315:14043:13795 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2315:14043:13795 1:N:0:CCGTCC' because it was < 2 characters long
8706747 reads; of these:
  8706747 (100.00%) were unpaired; of these:
    3122663 (35.86%) aligned 0 times
    3218247 (36.96%) aligned exactly 1 time
    2365837 (27.17%) aligned >1 times
64.14% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:37
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:20998:31360 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:20998:31360 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:13248:86507 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:13248:86507 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:11888:34756 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:11888:34756 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:20407:54403 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:20407:54403 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:5957:2098 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:5957:2098 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:9698:76227 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:9698:76227 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:12367:33785 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:12367:33785 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:13297:57814 1:N:0:AGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:13297:57814 1:N:0:AGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:1880:70752 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:1880:70752 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:16023:91512 1:N:0:AGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:16023:91512 1:N:0:AGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:5006:4819 1:N:0:AGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:5006:4819 1:N:0:AGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:12795:58535 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:12795:58535 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:3542:33884 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:3542:33884 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:15806:92473 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:15806:92473 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:4243:59789 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:4243:59789 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:10967:2810 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:10967:2810 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:6172:8245 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:6172:8245 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:7501:63781 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:7501:63781 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:5876:63915 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:5876:63915 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:7547:79909 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:7547:79909 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:7731:93324 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:7731:93324 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:2003:45336 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:2003:45336 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:6111:76653 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:6111:76653 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:9475:50155 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:9475:50155 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13844:54031 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13844:54031 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13183:77317 1:N:0:AGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13183:77317 1:N:0:AGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:18998:33558 1:N:0:AGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:18998:33558 1:N:0:AGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:16361:43300 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:16361:43300 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:3232:98047 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:3232:98047 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:8773:66051 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:8773:66051 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10378:36565 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10378:36565 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:15647:23036 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:15647:23036 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:3456:87077 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:3456:87077 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:15443:20875 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:15443:20875 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:10789:44369 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:10789:44369 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:4836:66054 1:N:0:CGTATG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:4836:66054 1:N:0:CGTATG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:7865:65033 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:7865:65033 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:13367:30621 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:13367:30621 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:5169:90991 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:5169:90991 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:18445:98844 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:18445:98844 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:14192:27489 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:14192:27489 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:2319:25387 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:2319:25387 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:14871:14161 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:14871:14161 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:19374:58420 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:19374:58420 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:8245:29958 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:8245:29958 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:15093:7576 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:15093:7576 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:5437:86295 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:5437:86295 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:18989:58701 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:18989:58701 1:N:0:CGTACG' because it was < 2 characters long
9578867 reads; of these:
  9578867 (100.00%) were unpaired; of these:
    2998582 (31.30%) aligned 0 times
    3942565 (41.16%) aligned exactly 1 time
    2637720 (27.54%) aligned >1 times
68.70% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:34
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:38
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18613:92589 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18613:92589 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:1693:66086 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:1693:66086 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:18241:65113 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:18241:65113 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:19423:25026 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:19423:25026 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:9447:55812 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:9447:55812 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:19741:88303 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:19741:88303 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:15282:46553 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:15282:46553 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:17759:86549 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:17759:86549 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:12980:26752 1:N:0:CAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:12980:26752 1:N:0:CAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9702:4656 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9702:4656 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:17721:46038 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:17721:46038 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14927:7796 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14927:7796 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:11413:53157 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:11413:53157 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:3844:14008 1:N:0:GAGAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:3844:14008 1:N:0:GAGAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:20587:96892 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:20587:96892 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:14934:86461 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:14934:86461 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:2728:26843 1:N:0:GAGAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:2728:26843 1:N:0:GAGAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:12781:43057 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:12781:43057 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:21103:65772 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:21103:65772 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13864:64926 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:13864:64926 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:11705:56488 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:11705:56488 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:7630:92966 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:7630:92966 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:18697:47900 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:18697:47900 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:1436:60347 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:1436:60347 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:16924:8612 1:N:0:TAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:16924:8612 1:N:0:TAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:9728:68575 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:9728:68575 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:19572:35865 1:N:0:GAGCGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:19572:35865 1:N:0:GAGCGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:8941:59533 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:8941:59533 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:8661:31405 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:8661:31405 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:17092:88931 1:N:0:CAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:17092:88931 1:N:0:CAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:12842:98616 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:12842:98616 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:4742:79423 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:4742:79423 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:16415:48317 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:16415:48317 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:7421:99979 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:7421:99979 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:3890:13464 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:3890:13464 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11135:36054 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11135:36054 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:15192:12385 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:15192:12385 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:20822:31059 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:20822:31059 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:19470:30120 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:19470:30120 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:6791:17315 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:6791:17315 1:N:0:GAGTGG' because it was < 2 characters long
9339766 reads; of these:
  9339766 (100.00%) were unpaired; of these:
    2873022 (30.76%) aligned 0 times
    3771387 (40.38%) aligned exactly 1 time
    2695357 (28.86%) aligned >1 times
69.24% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:6479:88080 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:6479:88080 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:18414:74542 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:18414:74542 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:10283:11412 1:N:0:GCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:10283:11412 1:N:0:GCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:7650:63773 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:7650:63773 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:11265:40218 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:11265:40218 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:17502:88528 1:N:0:GCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:17502:88528 1:N:0:GCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:9204:13119 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:9204:13119 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:11293:24314 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:11293:24314 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:20010:20941 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:20010:20941 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:17898:83358 1:N:0:CCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:17898:83358 1:N:0:CCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:13138:3965 1:N:0:ACTGAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:13138:3965 1:N:0:ACTGAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:8006:53749 1:N:0:ACTGGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:8006:53749 1:N:0:ACTGGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:7647:28564 1:N:0:CCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:7647:28564 1:N:0:CCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:3272:73821 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:3272:73821 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:12610:40847 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:12610:40847 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:7111:22690 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:7111:22690 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:19012:33453 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:19012:33453 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:17048:55751 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:17048:55751 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:20995:21815 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:20995:21815 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:1201:3140 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:1201:3140 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:3964:100521 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:3964:100521 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:1900:77667 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:1900:77667 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:2913:45635 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:2913:45635 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:10304:62004 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:10304:62004 1:N:0:ACTGAT' because it was < 2 characters long
9470237 reads; of these:
  9470237 (100.00%) were unpaired; of these:
    3021247 (31.90%) aligned 0 times
    3747868 (39.58%) aligned exactly 1 time
    2701122 (28.52%) aligned >1 times
68.10% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:42
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:6431:93858 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:6431:93858 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:3037:69686 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:3037:69686 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:19012:96705 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:19012:96705 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:5977:24538 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:5977:24538 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:4985:12593 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:4985:12593 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:9724:15944 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:9724:15944 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6932:41486 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6932:41486 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:15107:16624 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:15107:16624 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:13832:49062 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:13832:49062 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:16314:74171 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:16314:74171 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:15662:67590 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:15662:67590 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:15840:44644 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:15840:44644 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:11734:85823 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:11734:85823 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:2667:90618 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:2667:90618 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:20413:33854 1:N:0:ATGCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:20413:33854 1:N:0:ATGCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:21380:14395 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:21380:14395 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:10966:47329 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:10966:47329 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17318:52210 1:N:0:ATTCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17318:52210 1:N:0:ATTCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:3164:83826 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:3164:83826 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:11208:24859 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:11208:24859 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:12248:87341 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:12248:87341 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:14160:99392 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:14160:99392 1:N:0:ATTCCT' because it was < 2 characters long
9371650 reads; of these:
  9371650 (100.00%) were unpaired; of these:
    2976232 (31.76%) aligned 0 times
    3718170 (39.67%) aligned exactly 1 time
    2677248 (28.57%) aligned >1 times
68.24% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:35
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:39
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:10286:47274 1:N:0:ATCGCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:10286:47274 1:N:0:ATCGCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:9508:59676 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:9508:59676 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:4907:27714 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:4907:27714 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:7274:72830 1:N:0:CTCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:7274:72830 1:N:0:CTCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:7433:95095 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:7433:95095 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:17817:27616 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:17817:27616 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:18911:35071 1:N:0:ATCAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:18911:35071 1:N:0:ATCAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:17864:37800 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:17864:37800 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:9167:59012 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:9167:59012 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:17006:90576 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:17006:90576 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:14309:81919 1:N:0:AGCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:14309:81919 1:N:0:AGCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:15245:10848 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:15245:10848 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:2856:41533 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:2856:41533 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:10379:97828 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:10379:97828 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:20936:80792 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:20936:80792 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:4454:86112 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:4454:86112 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:2489:84875 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:2489:84875 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:17802:54812 1:N:0:ATAACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:17802:54812 1:N:0:ATAACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:7257:69817 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:7257:69817 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:15674:78913 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:15674:78913 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:6329:22173 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1303:6329:22173 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:4452:36234 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:4452:36234 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:18256:85059 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:18256:85059 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6746:49297 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6746:49297 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:16730:72904 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:16730:72904 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:14628:69912 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:14628:69912 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:18929:12446 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:18929:12446 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:11281:62101 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:11281:62101 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:8403:23522 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:8403:23522 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:14309:11441 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:14309:11441 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:5417:36780 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:5417:36780 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:17794:97417 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:17794:97417 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:21269:87390 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:21269:87390 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:12803:69180 1:N:0:ATCACA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:12803:69180 1:N:0:ATCACA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:10453:33871 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:10453:33871 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:12330:84278 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:12330:84278 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:19906:96976 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:19906:96976 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:1929:65010 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:1929:65010 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:16919:20161 1:N:0:ATCCCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:16919:20161 1:N:0:ATCCCG' because it was < 2 characters long
9663168 reads; of these:
  9663168 (100.00%) were unpaired; of these:
    3034627 (31.40%) aligned 0 times
    3907075 (40.43%) aligned exactly 1 time
    2721466 (28.16%) aligned >1 times
68.60% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:38
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:1571:55261 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:1571:55261 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:8687:37379 1:N:0:AGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:8687:37379 1:N:0:AGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:5811:20055 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:5811:20055 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:18787:72437 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:18787:72437 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:2933:94761 1:N:0:CGATGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:2933:94761 1:N:0:CGATGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:6024:61983 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:6024:61983 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:10567:2476 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:10567:2476 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:3054:8332 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:3054:8332 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:10430:96885 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:10430:96885 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:18948:14028 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:18948:14028 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:20919:52805 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:20919:52805 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:6228:8163 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:6228:8163 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:2422:66984 1:N:0:GGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:2422:66984 1:N:0:GGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:15199:89519 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:15199:89519 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:17259:71735 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:17259:71735 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:17159:46663 1:N:0:AGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:17159:46663 1:N:0:AGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:12226:61027 1:N:0:CGATGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:12226:61027 1:N:0:CGATGC' because it was < 2 characters long
10319812 reads; of these:
  10319812 (100.00%) were unpaired; of these:
    3490582 (33.82%) aligned 0 times
    3953137 (38.31%) aligned exactly 1 time
    2876093 (27.87%) aligned >1 times
66.18% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:35
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:41
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:3661:18333 1:N:0:GTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:3661:18333 1:N:0:GTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:11691:66279 1:N:0:ATAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:11691:66279 1:N:0:ATAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:13061:85361 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:13061:85361 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:8843:82524 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:8843:82524 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:6041:4882 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:6041:4882 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:6864:88432 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:6864:88432 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:1851:8184 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:1851:8184 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:4705:50575 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:4705:50575 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:12631:35836 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:12631:35836 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:1672:100693 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:1672:100693 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:11294:53698 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:11294:53698 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:15011:29822 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:15011:29822 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:5416:6575 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:5416:6575 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:10307:66490 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:10307:66490 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:17373:5970 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:17373:5970 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:12115:79221 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:12115:79221 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11822:91617 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11822:91617 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:13461:91688 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:13461:91688 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:17099:31464 1:N:0:GTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:17099:31464 1:N:0:GTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:13899:52357 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:13899:52357 1:N:0:TTAGGC' because it was < 2 characters long
8949667 reads; of these:
  8949667 (100.00%) were unpaired; of these:
    3110899 (34.76%) aligned 0 times
    3345092 (37.38%) aligned exactly 1 time
    2493676 (27.86%) aligned >1 times
65.24% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:35
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:39
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6991:5728 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6991:5728 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:18188:31366 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:18188:31366 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:18286:54567 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:18286:54567 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:13099:98671 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:13099:98671 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:12028:51794 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:12028:51794 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:11709:78251 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:11709:78251 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:20585:61677 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:20585:61677 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:9824:69362 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:9824:69362 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:9850:10126 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:9850:10126 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:10318:12022 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:10318:12022 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:6638:55421 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:6638:55421 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:8498:66592 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:8498:66592 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:5859:42373 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:5859:42373 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:2591:79688 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:2591:79688 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:6715:47546 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:6715:47546 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:13555:95726 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:13555:95726 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:19316:75779 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:19316:75779 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:18977:93758 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:18977:93758 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:10879:97098 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:10879:97098 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:10215:44944 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:10215:44944 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:11838:94273 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:11838:94273 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:17429:67329 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:17429:67329 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:18707:88796 1:N:0:GGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:18707:88796 1:N:0:GGACCA' because it was < 2 characters long
8863945 reads; of these:
  8863945 (100.00%) were unpaired; of these:
    2854294 (32.20%) aligned 0 times
    3405318 (38.42%) aligned exactly 1 time
    2604333 (29.38%) aligned >1 times
67.80% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:12635:28802 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:12635:28802 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:14512:86582 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:14512:86582 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:18044:3434 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:18044:3434 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:20808:82305 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1105:20808:82305 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:7043:3887 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:7043:3887 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:13919:67705 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:13919:67705 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:11030:35416 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:11030:35416 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:7951:32349 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:7951:32349 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:8760:100623 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:8760:100623 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:10641:21099 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:10641:21099 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:4389:64640 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:4389:64640 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:18059:42089 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:18059:42089 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:5559:60965 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:5559:60965 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:17872:75194 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:17872:75194 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:16960:30681 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:16960:30681 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:3898:59122 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:3898:59122 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:17519:31713 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:17519:31713 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:18670:64473 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:18670:64473 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4550:79700 1:N:0:GCAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4550:79700 1:N:0:GCAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:7218:100029 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:7218:100029 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:14802:38317 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:14802:38317 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:11466:40227 1:N:0:CCAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:11466:40227 1:N:0:CCAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:10691:28518 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:10691:28518 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:10356:9054 1:N:0:ACAGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:10356:9054 1:N:0:ACAGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:17226:11569 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:17226:11569 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:19778:98488 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:19778:98488 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14916:12786 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14916:12786 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:20553:23056 1:N:0:CCAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:20553:23056 1:N:0:CCAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:6146:49655 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:6146:49655 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:18239:79184 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:18239:79184 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:9328:89482 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:9328:89482 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:9801:25443 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:9801:25443 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:14447:24518 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:14447:24518 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:6315:41061 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:6315:41061 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:19329:72871 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:19329:72871 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:16172:54646 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:16172:54646 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:7138:59688 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:7138:59688 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:8441:100080 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:8441:100080 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:12263:17995 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2203:12263:17995 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:14724:75051 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:14724:75051 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:3876:48168 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:3876:48168 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:16267:36747 1:N:0:ACTGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:16267:36747 1:N:0:ACTGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:4393:91280 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:4393:91280 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11959:82919 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:11959:82919 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:14604:88826 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:14604:88826 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8718:45710 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8718:45710 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8126:65039 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8126:65039 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6949:77104 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6949:77104 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2307:10218:81102 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2307:10218:81102 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:14510:52822 1:N:0:ATAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:14510:52822 1:N:0:ATAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:9345:73900 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:9345:73900 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:17103:69030 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:17103:69030 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:7676:91445 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:7676:91445 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:20211:37329 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:20211:37329 1:N:0:ACAGTG' because it was < 2 characters long
13835052 reads; of these:
  13835052 (100.00%) were unpaired; of these:
    4142853 (29.94%) aligned 0 times
    5647117 (40.82%) aligned exactly 1 time
    4045082 (29.24%) aligned >1 times
70.06% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:44
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:44
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6436:95032 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:6436:95032 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:16944:76417 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:16944:76417 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:17059:40638 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:17059:40638 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:14394:91181 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1116:14394:91181 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:18959:76660 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:18959:76660 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:20303:99101 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:20303:99101 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:13950:55765 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:13950:55765 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14802:79352 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:14802:79352 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:19400:9045 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:19400:9045 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:19690:41327 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:19690:41327 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:14557:36267 1:N:0:GCCAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:14557:36267 1:N:0:GCCAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:13429:74556 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:13429:74556 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:7487:69896 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:7487:69896 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:14655:43895 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:14655:43895 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:15100:86746 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:15100:86746 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:19223:90670 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:19223:90670 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:15101:79046 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:15101:79046 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:1487:63265 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:1487:63265 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:16228:19933 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:16228:19933 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:1984:59321 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:1984:59321 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:13900:63674 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:13900:63674 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2307:9853:40450 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2307:9853:40450 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:7842:97898 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:7842:97898 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:9228:63979 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:9228:63979 1:N:0:GCCAAT' because it was < 2 characters long
9365104 reads; of these:
  9365104 (100.00%) were unpaired; of these:
    2766402 (29.54%) aligned 0 times
    3733196 (39.86%) aligned exactly 1 time
    2865506 (30.60%) aligned >1 times
70.46% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:59
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:59
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18304:61166 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18304:61166 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:19728:33073 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:19728:33073 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:14682:2395 1:N:0:AAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:14682:2395 1:N:0:AAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:10813:52229 1:N:0:AAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:10813:52229 1:N:0:AAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:5442:77236 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:5442:77236 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:16956:60247 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:16956:60247 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:16282:2866 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:16282:2866 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:5410:54890 1:N:0:CAGGTC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:5410:54890 1:N:0:CAGGTC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:18233:24027 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:18233:24027 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:14861:75052 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:14861:75052 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:9434:5305 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:9434:5305 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:12046:42190 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:12046:42190 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:4645:95560 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:4645:95560 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:12892:31268 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:12892:31268 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:17401:44837 1:N:0:CATATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:17401:44837 1:N:0:CATATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:17601:48235 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:17601:48235 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:17187:65065 1:N:0:AAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:17187:65065 1:N:0:AAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:10475:20302 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:10475:20302 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:18801:98583 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:18801:98583 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:16079:71553 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:16079:71553 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:18590:73749 1:N:0:GAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:18590:73749 1:N:0:GAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:14056:79856 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:14056:79856 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:18638:63686 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:18638:63686 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:18526:95701 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:18526:95701 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:2568:12996 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:2568:12996 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:16844:86646 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:16844:86646 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:13318:87197 1:N:0:CGGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:13318:87197 1:N:0:CGGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:17968:53575 1:N:0:CAGGTC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:17968:53575 1:N:0:CAGGTC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:11162:31780 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:11162:31780 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:1837:92562 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:1837:92562 1:N:0:CAGATC' because it was < 2 characters long
9235632 reads; of these:
  9235632 (100.00%) were unpaired; of these:
    2768937 (29.98%) aligned 0 times
    3675539 (39.80%) aligned exactly 1 time
    2791156 (30.22%) aligned >1 times
70.02% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:35
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:53
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:59
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:16511:35898 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:16511:35898 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:16712:60035 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:16712:60035 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:2326:51604 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:2326:51604 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:2658:8152 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:2658:8152 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:5725:52964 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:5725:52964 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:16145:59586 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:16145:59586 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:15887:23614 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:15887:23614 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:9737:91551 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:9737:91551 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:7833:4968 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:7833:4968 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:16085:25064 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:16085:25064 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:19887:90083 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:19887:90083 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4652:52901 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4652:52901 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:16776:33113 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:16776:33113 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:7163:97553 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:7163:97553 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:13228:69566 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:13228:69566 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:3458:6553 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:3458:6553 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:1931:59885 1:N:0:ACTTTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:1931:59885 1:N:0:ACTTTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:17544:97922 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1301:17544:97922 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:9553:7523 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:9553:7523 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:5766:45373 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1302:5766:45373 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:4978:44501 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:4978:44501 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:3529:12518 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:3529:12518 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:18052:25866 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:18052:25866 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:13645:46027 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:13645:46027 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:14325:10696 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:14325:10696 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6795:21863 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6795:21863 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6577:69519 1:N:0:ACCTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1312:6577:69519 1:N:0:ACCTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:13176:8762 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:13176:8762 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:5289:21090 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:5289:21090 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:12501:43293 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:12501:43293 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:9724:80339 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:9724:80339 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:11755:88799 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:11755:88799 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10408:16055 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10408:16055 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:8263:96267 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:8263:96267 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:6064:85900 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:6064:85900 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:8111:57872 1:N:0:ACATGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:8111:57872 1:N:0:ACATGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:21231:97315 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:21231:97315 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:14618:59754 1:N:0:ACATGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:14618:59754 1:N:0:ACATGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:8243:34531 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:8243:34531 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:2880:54009 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:2880:54009 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:19086:69213 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:19086:69213 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:10532:30393 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:10532:30393 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:18780:51359 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:18780:51359 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:16532:49276 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:16532:49276 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:18468:3213 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:18468:3213 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:16801:13042 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:16801:13042 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:16915:44036 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:16915:44036 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:8170:99029 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:8170:99029 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:6913:91143 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:6913:91143 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17726:76656 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17726:76656 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:17926:25419 1:N:0:GCTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:17926:25419 1:N:0:GCTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:7557:68001 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:7557:68001 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:4222:84484 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:4222:84484 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:9784:9812 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:9784:9812 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:7527:58069 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2216:7527:58069 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:9665:83909 1:N:0:CCTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:9665:83909 1:N:0:CCTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:5013:96439 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:5013:96439 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:12901:100490 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:12901:100490 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:3866:66763 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:3866:66763 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:12602:47231 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:12602:47231 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:17635:69147 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:17635:69147 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:16990:54793 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:16990:54793 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:15641:28099 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:15641:28099 1:N:0:ACTTGA' because it was < 2 characters long
8156624 reads; of these:
  8156624 (100.00%) were unpaired; of these:
    1112862 (13.64%) aligned 0 times
    3649556 (44.74%) aligned exactly 1 time
    3394206 (41.61%) aligned >1 times
86.36% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:02
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:06
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:14353:51403 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:14353:51403 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:13581:4610 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:13581:4610 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1105:1309:19137 1:N:0:ATCAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1105:1309:19137 1:N:0:ATCAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:1841:87371 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:1841:87371 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:6372:77905 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1114:6372:77905 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:17997:87207 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:17997:87207 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1202:19574:90568 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1202:19574:90568 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:18356:4428 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:18356:4428 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:16210:93669 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1208:16210:93669 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:13660:39127 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1210:13660:39127 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:5900:70694 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1307:5900:70694 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:4866:94580 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:4866:94580 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1310:20850:63191 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1310:20850:63191 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1311:18753:8578 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1311:18753:8578 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:14781:22703 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:14781:22703 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2103:5297:24887 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2103:5297:24887 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:10468:93243 1:N:0:GTCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:10468:93243 1:N:0:GTCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:14767:16133 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2110:14767:16133 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:13509:55524 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2112:13509:55524 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2113:10557:83073 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2113:10557:83073 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:21064:77286 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:21064:77286 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2115:16548:13533 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2115:16548:13533 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2116:11886:49776 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2116:11886:49776 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:8473:28604 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:8473:28604 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:7929:31086 1:N:0:ATCAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2202:7929:31086 1:N:0:ATCAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:3863:46658 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:3863:46658 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:3227:74029 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:3227:74029 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2209:14944:23993 1:N:0:TTCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2209:14944:23993 1:N:0:TTCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:20217:28095 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:20217:28095 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2313:14059:58703 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2313:14059:58703 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2314:7999:39059 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2314:7999:39059 1:N:0:ATCACG' because it was < 2 characters long
9671383 reads; of these:
  9671383 (100.00%) were unpaired; of these:
    2865680 (29.63%) aligned 0 times
    4062580 (42.01%) aligned exactly 1 time
    2743123 (28.36%) aligned >1 times
70.37% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:55
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:56
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:2617:85183 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1102:2617:85183 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:2257:100190 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1103:2257:100190 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:5287:44559 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:5287:44559 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:15485:63181 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:15485:63181 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:3490:38332 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:3490:38332 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:16368:25169 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:16368:25169 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:17520:82652 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:17520:82652 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:20709:31391 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:20709:31391 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:10599:59799 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2101:10599:59799 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:18187:84434 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:18187:84434 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2111:10370:22009 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2111:10370:22009 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2205:11706:30972 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2205:11706:30972 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:9200:14462 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2206:9200:14462 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:6156:45183 1:N:0:TGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:6156:45183 1:N:0:TGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:5561:57213 1:N:0:GGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2214:5561:57213 1:N:0:GGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2306:18257:87840 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2306:18257:87840 1:N:0:CGATGT' because it was < 2 characters long
9238265 reads; of these:
  9238265 (100.00%) were unpaired; of these:
    2648995 (28.67%) aligned 0 times
    3902353 (42.24%) aligned exactly 1 time
    2686917 (29.08%) aligned >1 times
71.33% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:39
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:15
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:20
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:21
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:50
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:16182:3546 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1101:16182:3546 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1113:3338:19491 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1113:3338:19491 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:20322:94933 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1203:20322:94933 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1206:13477:50827 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1206:13477:50827 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:12346:81362 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1213:12346:81362 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:14533:71198 1:N:0:TTAGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:14533:71198 1:N:0:TTAGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:12790:59041 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1306:12790:59041 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:13737:91084 1:N:0:TTAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1313:13737:91084 1:N:0:TTAGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:19908:54173 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:19908:54173 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:14781:28792 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2108:14781:28792 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:14756:15628 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2109:14756:15628 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:13174:38949 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2114:13174:38949 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2208:9231:35755 1:N:0:TTAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2208:9231:35755 1:N:0:TTAGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2209:13210:94345 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2209:13210:94345 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2309:6693:64963 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2309:6693:64963 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2316:6012:77627 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2316:6012:77627 1:N:0:TTAGGC' because it was < 2 characters long
9582956 reads; of these:
  9582956 (100.00%) were unpaired; of these:
    2726049 (28.45%) aligned 0 times
    4133425 (43.13%) aligned exactly 1 time
    2723482 (28.42%) aligned >1 times
71.55% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:35
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:19
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:15
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:10778:48363 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:10778:48363 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:12835:51915 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1108:12835:51915 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1109:18666:94424 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1109:18666:94424 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:8771:75346 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1110:8771:75346 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:6088:85282 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1112:6088:85282 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:15476:31223 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1115:15476:31223 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1116:11543:2104 1:N:0:GGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1116:11543:2104 1:N:0:GGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1209:19036:95322 1:N:0:TGAGCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1209:19036:95322 1:N:0:TGAGCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1211:19532:74144 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1211:19532:74144 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:3942:11081 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1214:3942:11081 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:18222:96579 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1215:18222:96579 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1216:4755:52504 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1216:4755:52504 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:20781:56025 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1308:20781:56025 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:13831:64468 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1309:13831:64468 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:13262:71317 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:1314:13262:71317 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:15794:46239 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2104:15794:46239 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2107:15431:42115 1:N:0:AGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2107:15431:42115 1:N:0:AGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2111:12700:97445 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2111:12700:97445 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:17132:47598 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:17132:47598 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:16445:51533 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2204:16445:51533 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2205:8708:85598 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2205:8708:85598 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2210:5432:32302 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2210:5432:32302 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:13175:35077 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:13175:35077 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:5575:38707 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:5575:38707 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:19440:82601 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2213:19440:82601 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2304:9080:74468 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2304:9080:74468 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2306:20755:87876 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2306:20755:87876 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2309:9530:48311 1:N:0:TGACAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2309:9530:48311 1:N:0:TGACAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2310:13130:61445 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2310:13130:61445 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2316:11838:69305 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:1:2316:11838:69305 1:N:0:TGACCA' because it was < 2 characters long
9225130 reads; of these:
  9225130 (100.00%) were unpaired; of these:
    2725244 (29.54%) aligned 0 times
    3900922 (42.29%) aligned exactly 1 time
    2598964 (28.17%) aligned >1 times
70.46% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:40
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:16
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:19
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:11756:86740 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:11756:86740 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18697:4204 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1103:18697:4204 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:3810:27742 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:3810:27742 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:6612:70031 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:6612:70031 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:20976:63418 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1109:20976:63418 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:10787:30985 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:10787:30985 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:8716:80721 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:8716:80721 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:19760:72863 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:19760:72863 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:10073:76759 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:10073:76759 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4567:85117 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:4567:85117 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:6958:62099 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:6958:62099 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:17849:45133 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:17849:45133 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:13168:10514 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:13168:10514 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:15079:92026 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:15079:92026 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1313:10916:2358 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1313:10916:2358 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:7457:36514 1:N:0:CATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1314:7457:36514 1:N:0:CATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:16431:25077 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:16431:25077 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:6023:72306 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:6023:72306 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:4981:10098 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:4981:10098 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:10416:53606 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:10416:53606 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:18711:74190 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:18711:74190 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:14975:30519 1:N:0:GGTCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:14975:30519 1:N:0:GGTCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:15772:52896 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:15772:52896 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:20868:66972 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:20868:66972 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:21261:69901 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:21261:69901 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:6278:22626 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:6278:22626 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:17612:25382 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2208:17612:25382 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:15023:54674 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2211:15023:54674 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:5318:93056 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:5318:93056 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:16906:94634 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:16906:94634 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:21094:3752 1:N:0:GATAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:21094:3752 1:N:0:GATAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:7196:15036 1:N:0:AATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:7196:15036 1:N:0:AATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:8565:13908 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:8565:13908 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:20838:7565 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:20838:7565 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:9973:83671 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:9973:83671 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:9528:30566 1:N:0:AATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:9528:30566 1:N:0:AATCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2315:19407:87908 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2315:19407:87908 1:N:0:GATCAG' because it was < 2 characters long
9391388 reads; of these:
  9391388 (100.00%) were unpaired; of these:
    2646524 (28.18%) aligned 0 times
    3826468 (40.74%) aligned exactly 1 time
    2918396 (31.08%) aligned >1 times
71.82% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:40
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:15
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:35
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:20
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:15096:84915 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:15096:84915 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:2392:85680 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:2392:85680 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9616:29908 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9616:29908 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:15339:71154 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:15339:71154 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:5196:58930 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:5196:58930 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:15733:35841 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:15733:35841 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:12734:68442 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2106:12734:68442 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:4539:81419 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:4539:81419 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:12487:47660 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:12487:47660 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:1369:18556 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:1369:18556 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:19554:17125 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:19554:17125 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:2505:45873 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:2505:45873 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:6249:13102 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:6249:13102 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:8214:96433 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:8214:96433 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:12929:13831 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:12929:13831 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:4708:36903 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:4708:36903 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:11442:75563 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:11442:75563 1:N:0:TAGCTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:13723:45803 1:N:0:TAGCTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:13723:45803 1:N:0:TAGCTT' because it was < 2 characters long
9395603 reads; of these:
  9395603 (100.00%) were unpaired; of these:
    2777144 (29.56%) aligned 0 times
    3824123 (40.70%) aligned exactly 1 time
    2794336 (29.74%) aligned >1 times
70.44% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:16
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:35
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:20
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:06
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:16465:68023 1:N:0:AGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:16465:68023 1:N:0:AGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:3858:56953 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:3858:56953 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:5769:73911 1:N:0:GGCTAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1113:5769:73911 1:N:0:GGCTAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:11255:10535 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:11255:10535 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:9199:13737 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:9199:13737 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:14267:31173 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:14267:31173 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:20784:33326 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:20784:33326 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:13720:24195 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:13720:24195 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:5632:82796 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:5632:82796 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:15355:42197 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:15355:42197 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:17520:15952 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:17520:15952 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:8402:15974 1:N:0:GGATAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:8402:15974 1:N:0:GGATAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:16209:80216 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:16209:80216 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:1258:44763 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:1258:44763 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:13847:38174 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:13847:38174 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:9179:43026 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:9179:43026 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:11455:100849 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:11455:100849 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:4203:41787 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:4203:41787 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:9429:74417 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2103:9429:74417 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:9501:33853 1:N:0:AGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2107:9501:33853 1:N:0:AGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:11104:33495 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:11104:33495 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:5563:16276 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:5563:16276 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:13247:59164 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:13247:59164 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:11530:71410 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:11530:71410 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:21372:34473 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:21372:34473 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:21160:43473 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:21160:43473 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:20912:47148 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:20912:47148 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:7447:27525 1:N:0:TGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:7447:27525 1:N:0:TGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8642:51524 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2303:8642:51524 1:N:0:GGCTAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:20007:39423 1:N:0:GGCTAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2309:20007:39423 1:N:0:GGCTAC' because it was < 2 characters long
9323131 reads; of these:
  9323131 (100.00%) were unpaired; of these:
    2856738 (30.64%) aligned 0 times
    3734820 (40.06%) aligned exactly 1 time
    2731573 (29.30%) aligned >1 times
69.36% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:00
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:03
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:11360:11513 1:N:0:GTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:11360:11513 1:N:0:GTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:13478:3374 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:13478:3374 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:6697:47695 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:6697:47695 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:17056:28590 1:N:0:CATGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1114:17056:28590 1:N:0:CATGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:12884:59813 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1202:12884:59813 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:3874:16114 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:3874:16114 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:16788:14111 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:16788:14111 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:3686:13616 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:3686:13616 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:21397:41089 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1209:21397:41089 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:15045:15187 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1210:15045:15187 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:9810:7730 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:9810:7730 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:5812:50654 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:5812:50654 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:20203:83865 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:20203:83865 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:16697:97589 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:16697:97589 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:18925:58386 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:18925:58386 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:6220:79337 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:6220:79337 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:11945:88124 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2111:11945:88124 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:9802:48734 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:9802:48734 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:20548:15022 1:N:0:CTTGTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:20548:15022 1:N:0:CTTGTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:12780:46884 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:12780:46884 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:14717:41850 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:14717:41850 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:11149:96938 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2212:11149:96938 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:15661:57950 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:15661:57950 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16757:46389 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16757:46389 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:19026:18110 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2302:19026:18110 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6138:5724 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6138:5724 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:14633:75921 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:14633:75921 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:12116:69890 1:N:0:ATTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:12116:69890 1:N:0:ATTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:8187:73760 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2312:8187:73760 1:N:0:CTTGTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:9592:80930 1:N:0:CTTGTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2313:9592:80930 1:N:0:CTTGTA' because it was < 2 characters long
9571362 reads; of these:
  9571362 (100.00%) were unpaired; of these:
    2855507 (29.83%) aligned 0 times
    3911812 (40.87%) aligned exactly 1 time
    2804043 (29.30%) aligned >1 times
70.17% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:01
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:05
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:11957:16366 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1102:11957:16366 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:5770:3635 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:5770:3635 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:12546:94930 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:12546:94930 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:17882:96854 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:17882:96854 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:3977:37732 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:3977:37732 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:19268:83661 1:N:0:AGTCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1203:19268:83661 1:N:0:AGTCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:6135:28768 1:N:0:AGTCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:6135:28768 1:N:0:AGTCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:14880:74310 1:N:0:CGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1204:14880:74310 1:N:0:CGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:5507:29060 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:5507:29060 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:10553:84489 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:10553:84489 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:16816:76962 1:N:0:AGACAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1307:16816:76962 1:N:0:AGACAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:7144:85103 1:N:0:AGTCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:7144:85103 1:N:0:AGTCAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:1250:44767 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:1250:44767 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:2411:14745 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2112:2411:14745 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:9708:4585 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2113:9708:4585 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:20117:97562 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2201:20117:97562 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:5896:94891 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:5896:94891 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:20966:43664 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2204:20966:43664 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:4255:55592 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:4255:55592 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:5440:89421 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:5440:89421 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17531:33621 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2210:17531:33621 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:3521:4606 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:3521:4606 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:4858:93008 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:4858:93008 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:13983:93968 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2314:13983:93968 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:12133:3913 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2316:12133:3913 1:N:0:AGTCAA' because it was < 2 characters long
9117907 reads; of these:
  9117907 (100.00%) were unpaired; of these:
    2874292 (31.52%) aligned 0 times
    3685024 (40.42%) aligned exactly 1 time
    2558591 (28.06%) aligned >1 times
68.48% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:02
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:03
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:5798:22695 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1108:5798:22695 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:8395:96981 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1111:8395:96981 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:15189:35670 1:N:0:CGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:15189:35670 1:N:0:CGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9210:22944 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:9210:22944 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:4385:51411 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1214:4385:51411 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:20990:21733 1:N:0:AGTTGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1216:20990:21733 1:N:0:AGTTGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:5307:70833 1:N:0:TGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:5307:70833 1:N:0:TGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:3702:96733 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1304:3702:96733 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:2305:2600 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1310:2305:2600 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:17481:72142 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:17481:72142 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:7935:2856 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:7935:2856 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:14647:76713 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1315:14647:76713 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10976:1987 1:N:0:TGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2101:10976:1987 1:N:0:TGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:10123:43594 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2105:10123:43594 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:8024:66556 1:N:0:AGTACC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2108:8024:66556 1:N:0:AGTACC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:15544:89888 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:15544:89888 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:7787:13467 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2116:7787:13467 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:13274:42700 1:N:0:GGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:13274:42700 1:N:0:GGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6724:52670 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:6724:52670 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:14513:39295 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2306:14513:39295 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:13109:92755 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2308:13109:92755 1:N:0:AGTTCC' because it was < 2 characters long
8973286 reads; of these:
  8973286 (100.00%) were unpaired; of these:
    3445843 (38.40%) aligned 0 times
    3193400 (35.59%) aligned exactly 1 time
    2334043 (26.01%) aligned >1 times
61.60% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:02
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:04
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:9434:98962 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1101:9434:98962 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:5233:47156 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:5233:47156 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:2237:66419 1:N:0:ATGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1106:2237:66419 1:N:0:ATGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:7324:93796 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1110:7324:93796 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:11294:6301 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1201:11294:6301 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:10289:45361 1:N:0:ATGACA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1205:10289:45361 1:N:0:ATGACA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:1453:19782 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1207:1453:19782 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:4889:57668 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1208:4889:57668 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:1210:30304 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1212:1210:30304 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:1198:2595 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:1198:2595 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:10298:91550 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:10298:91550 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:5916:87134 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1306:5916:87134 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:13698:8954 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:13698:8954 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:18623:70121 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1311:18623:70121 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1313:13679:55159 1:N:0:ATGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1313:13679:55159 1:N:0:ATGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:4674:16279 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1316:4674:16279 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:14639:44907 1:N:0:ATATCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:14639:44907 1:N:0:ATATCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:12255:81604 1:N:0:CTGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2104:12255:81604 1:N:0:CTGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:13780:43253 1:N:0:TTGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2109:13780:43253 1:N:0:TTGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:2006:92634 1:N:0:AGGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2115:2006:92634 1:N:0:AGGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:6761:58761 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:6761:58761 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:7156:87218 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2202:7156:87218 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:6108:88052 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2205:6108:88052 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:12865:40563 1:N:0:GTGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:12865:40563 1:N:0:GTGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:9722:43499 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:9722:43499 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:12192:98461 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2214:12192:98461 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:12662:95179 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2215:12662:95179 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16014:84867 1:N:0:ATGTTA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16014:84867 1:N:0:ATGTTA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:5383:56577 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2304:5383:56577 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:10861:50704 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2305:10861:50704 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:14389:39202 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:14389:39202 1:N:0:ATGTCA' because it was < 2 characters long
9069478 reads; of these:
  9069478 (100.00%) were unpaired; of these:
    3165420 (34.90%) aligned 0 times
    3391688 (37.40%) aligned exactly 1 time
    2512370 (27.70%) aligned >1 times
65.10% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:08
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:14
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:8580:46905 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1104:8580:46905 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:6331:55288 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1107:6331:55288 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:14931:78362 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1112:14931:78362 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:13066:50621 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1115:13066:50621 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:10770:70672 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1206:10770:70672 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:7032:31345 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1211:7032:31345 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:20133:15834 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1213:20133:15834 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:16771:31987 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:16771:31987 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:13892:90216 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1215:13892:90216 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:10842:51022 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1305:10842:51022 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:3300:72828 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1308:3300:72828 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:8657:22710 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:1309:8657:22710 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:16861:51110 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2102:16861:51110 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:13734:8766 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2110:13734:8766 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:20358:3696 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2114:20358:3696 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:17262:13408 1:N:0:CAGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2206:17262:13408 1:N:0:CAGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:9156:88714 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2207:9156:88714 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:11906:100243 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2209:11906:100243 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:5559:50528 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2213:5559:50528 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16680:2413 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2301:16680:2413 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:2404:68071 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2310:2404:68071 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:21231:59935 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:2:2311:21231:59935 1:N:0:CCGTCC' because it was < 2 characters long
8522998 reads; of these:
  8522998 (100.00%) were unpaired; of these:
    2855359 (33.50%) aligned 0 times
    3293594 (38.64%) aligned exactly 1 time
    2374045 (27.85%) aligned >1 times
66.50% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:10
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:14
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:16334:15890 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:16334:15890 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:7342:96598 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:7342:96598 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:14208:69032 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:14208:69032 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:9890:94418 1:N:0:GTCCGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:9890:94418 1:N:0:GTCCGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:2472:68150 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:2472:68150 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:6617:68257 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:6617:68257 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:3555:65479 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:3555:65479 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:3533:27087 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:3533:27087 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:3391:82761 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:3391:82761 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:19253:26841 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:19253:26841 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:7858:28454 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:7858:28454 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:9108:4965 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:9108:4965 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:16146:35013 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:16146:35013 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13329:5767 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13329:5767 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:18256:25886 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:18256:25886 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:3729:63536 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:3729:63536 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:3673:33682 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:3673:33682 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:3747:94031 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:3747:94031 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:13147:47950 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:13147:47950 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:18138:75469 1:N:0:GTGCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:18138:75469 1:N:0:GTGCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:8890:7003 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:8890:7003 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5906:43538 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5906:43538 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:9943:66491 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:9943:66491 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:5718:99415 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:5718:99415 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:17692:74925 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:17692:74925 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:8142:15131 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:8142:15131 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:6879:36534 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:6879:36534 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:4348:11136 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:4348:11136 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:18657:85770 1:N:0:GTCCAC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:18657:85770 1:N:0:GTCCAC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:14857:5648 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:14857:5648 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:9347:61321 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:9347:61321 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:11473:64785 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:11473:64785 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:6174:37445 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:6174:37445 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:10409:42992 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:10409:42992 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:5133:58474 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:5133:58474 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:11437:33053 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:11437:33053 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:11298:89655 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:11298:89655 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:6960:7219 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:6960:7219 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6214:23662 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6214:23662 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6137:30222 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6137:30222 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3949:12907 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3949:12907 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:20798:2616 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:20798:2616 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:7927:12160 1:N:0:GTCCGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:7927:12160 1:N:0:GTCCGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:17851:3529 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:17851:3529 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:2751:32759 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:2751:32759 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:9567:47888 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:9567:47888 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:7515:81150 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:7515:81150 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:1147:89499 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:1147:89499 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:6914:94262 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:6914:94262 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:18563:70354 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:18563:70354 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:13763:20591 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:13763:20591 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:19241:100181 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:19241:100181 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:10839:32964 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:10839:32964 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:5762:57059 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:5762:57059 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:3667:10026 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:3667:10026 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:14190:18515 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:14190:18515 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:5603:74098 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:5603:74098 1:N:0:GTCCGC' because it was < 2 characters long
9950816 reads; of these:
  9950816 (100.00%) were unpaired; of these:
    3035338 (30.50%) aligned 0 times
    4096374 (41.17%) aligned exactly 1 time
    2819104 (28.33%) aligned >1 times
69.50% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:09
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:14
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:7529:27574 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:7529:27574 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:14243:96391 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:14243:96391 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:14769:66900 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:14769:66900 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:11388:10749 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:11388:10749 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:17484:39248 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:17484:39248 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:4431:33882 1:N:0:GAGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:4431:33882 1:N:0:GAGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:19990:51837 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:19990:51837 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:13129:19498 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:13129:19498 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:21337:30165 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:21337:30165 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:21094:86113 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:21094:86113 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:18567:28323 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:18567:28323 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:17019:69121 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:17019:69121 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:13204:56070 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:13204:56070 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:11001:91047 1:N:0:ATGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:11001:91047 1:N:0:ATGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:10322:11828 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:10322:11828 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:8553:69993 1:N:0:GTTAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:8553:69993 1:N:0:GTTAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:20030:27175 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:20030:27175 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:15791:35931 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:15791:35931 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:6147:32827 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:6147:32827 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:12054:54164 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:12054:54164 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:17540:66460 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:17540:66460 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:7549:91858 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:7549:91858 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:16464:73577 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:16464:73577 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:17215:80515 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:17215:80515 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:4934:49695 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:4934:49695 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20834:69414 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20834:69414 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:8592:10908 1:N:0:GTGAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:8592:10908 1:N:0:GTGAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:16120:97297 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:16120:97297 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:8467:47838 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:8467:47838 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:7409:6920 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:7409:6920 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:18582:71443 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:18582:71443 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:11098:12803 1:N:0:GGGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:11098:12803 1:N:0:GGGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:19117:4032 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:19117:4032 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:15502:74386 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:15502:74386 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:5532:3376 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:5532:3376 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:20674:15964 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:20674:15964 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:19023:51381 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:19023:51381 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:15174:66425 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:15174:66425 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:13155:75977 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:13155:75977 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:9084:14638 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:9084:14638 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:7865:50948 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:7865:50948 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:10150:99931 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:10150:99931 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:6662:20118 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:6662:20118 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:8096:28322 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:8096:28322 1:N:0:GTGAAA' because it was < 2 characters long
9198728 reads; of these:
  9198728 (100.00%) were unpaired; of these:
    2890173 (31.42%) aligned 0 times
    3693104 (40.15%) aligned exactly 1 time
    2615451 (28.43%) aligned >1 times
68.58% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:39
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:10
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:17
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:5530:56783 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:5530:56783 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:13663:61993 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:13663:61993 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:11955:69337 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:11955:69337 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:14351:24848 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:14351:24848 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:8411:27346 1:N:0:ATGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:8411:27346 1:N:0:ATGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:8982:9365 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:8982:9365 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:3267:58435 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:3267:58435 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:18354:36738 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:18354:36738 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:2143:17769 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:2143:17769 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:17852:94124 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:17852:94124 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:13114:98386 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:13114:98386 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:8940:57468 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:8940:57468 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:21161:35792 1:N:0:GTGGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:21161:35792 1:N:0:GTGGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:7328:89416 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:7328:89416 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13391:77013 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13391:77013 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:16456:93000 1:N:0:GTGGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:16456:93000 1:N:0:GTGGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:19198:57750 1:N:0:TTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:19198:57750 1:N:0:TTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:9610:34712 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:9610:34712 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:9344:25938 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:9344:25938 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:3435:15474 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:3435:15474 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5013:51463 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5013:51463 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:4421:94046 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:4421:94046 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:1223:53631 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:1223:53631 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:4243:25541 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:4243:25541 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:17530:41796 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:17530:41796 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:3719:62954 1:N:0:ATGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:3719:62954 1:N:0:ATGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:8228:28976 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:8228:28976 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:12077:86013 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:12077:86013 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:7116:65292 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:7116:65292 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:8990:8140 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:8990:8140 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:16612:62381 1:N:0:GTGGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:16612:62381 1:N:0:GTGGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:5651:73807 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:5651:73807 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:10065:53441 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:10065:53441 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:12522:60613 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:12522:60613 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:19659:97849 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:19659:97849 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:9637:63030 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:9637:63030 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:12200:32411 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:12200:32411 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:14735:96345 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:14735:96345 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:3544:22974 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:3544:22974 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:11101:82690 1:N:0:ATGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:11101:82690 1:N:0:ATGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:4688:72497 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:4688:72497 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:5796:9942 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:5796:9942 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:19687:48519 1:N:0:TTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:19687:48519 1:N:0:TTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:2488:22416 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:2488:22416 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:8770:7064 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:8770:7064 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:11017:92091 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:11017:92091 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:16275:34571 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:16275:34571 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:19498:16058 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:19498:16058 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:19294:61848 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:19294:61848 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:4747:30948 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:4747:30948 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:3986:92442 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:3986:92442 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:17924:46603 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:17924:46603 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:17698:17368 1:N:0:GGGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:17698:17368 1:N:0:GGGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:2117:52777 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:2117:52777 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:16896:16023 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:16896:16023 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:17759:16279 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:17759:16279 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:14776:20837 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:14776:20837 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16792:30534 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16792:30534 1:N:0:GTGGCC' because it was < 2 characters long
9544127 reads; of these:
  9544127 (100.00%) were unpaired; of these:
    2910675 (30.50%) aligned 0 times
    3828803 (40.12%) aligned exactly 1 time
    2804649 (29.39%) aligned >1 times
69.50% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:09
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:14
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:19208:59462 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:19208:59462 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:7261:30810 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:7261:30810 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:7877:45485 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:7877:45485 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:10598:2519 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:10598:2519 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8694:29944 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8694:29944 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:5405:37778 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:5405:37778 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:16556:22692 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:16556:22692 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:18236:86388 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:18236:86388 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:21095:34181 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:21095:34181 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:20164:91035 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:20164:91035 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:4581:87273 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:4581:87273 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:20686:40945 1:N:0:TTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:20686:40945 1:N:0:TTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:6185:46817 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:6185:46817 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:10465:99080 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:10465:99080 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:11092:41807 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:11092:41807 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13520:45771 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13520:45771 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:1336:88944 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:1336:88944 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:5933:89621 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:5933:89621 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:12830:42895 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:12830:42895 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:7619:82892 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:7619:82892 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:15855:88996 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:15855:88996 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:8936:91779 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:8936:91779 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1301:18361:50540 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1301:18361:50540 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:10671:23023 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:10671:23023 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:10142:50386 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:10142:50386 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:21163:95166 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:21163:95166 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:15246:25207 1:N:0:GTTGCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:15246:25207 1:N:0:GTTGCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:7251:9421 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:7251:9421 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:2671:57026 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:2671:57026 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:14187:14100 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:14187:14100 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:11768:44324 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:11768:44324 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:11118:46422 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:11118:46422 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:6594:93722 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:6594:93722 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:16163:14697 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:16163:14697 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8447:88603 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8447:88603 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:1260:89948 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:1260:89948 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:5155:97068 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:5155:97068 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:11291:57562 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:11291:57562 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:14885:38457 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:14885:38457 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:1831:95410 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:1831:95410 1:N:0:ATTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:9893:28492 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:9893:28492 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:21193:45794 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:21193:45794 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:6609:78449 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:6609:78449 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:16367:55382 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:16367:55382 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:17602:81360 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:17602:81360 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:18832:59892 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:18832:59892 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20171:97183 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20171:97183 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:20650:64431 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:20650:64431 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:21217:79073 1:N:0:GTTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:21217:79073 1:N:0:GTTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:16337:63733 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:16337:63733 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:15515:26976 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:15515:26976 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:7218:35243 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:7218:35243 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:14474:44105 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:14474:44105 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:21119:64232 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:21119:64232 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:13583:63974 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:13583:63974 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:14089:3661 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:14089:3661 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:7703:53195 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:7703:53195 1:N:0:ATTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:8194:8544 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:8194:8544 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:4639:18950 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:4639:18950 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:12421:99889 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:12421:99889 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:15831:33735 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:15831:33735 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:18662:85120 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:18662:85120 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:2505:63491 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:2505:63491 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13954:91152 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13954:91152 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13097:91925 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13097:91925 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:16398:64425 1:N:0:GTTTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:16398:64425 1:N:0:GTTTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:10445:17222 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:10445:17222 1:N:0:ATTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:4079:20874 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:4079:20874 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:14690:71167 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:14690:71167 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:8965:43071 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:8965:43071 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:14718:24595 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:14718:24595 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:11339:15475 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:11339:15475 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:4945:64143 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:4945:64143 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:9344:29193 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:9344:29193 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:3770:46547 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:3770:46547 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:8183:41452 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:8183:41452 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:8071:88548 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:8071:88548 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:21347:15812 1:N:0:GTTTTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:21347:15812 1:N:0:GTTTTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:10654:24871 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:10654:24871 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:5872:88974 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:5872:88974 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:4366:70912 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:4366:70912 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:19667:33340 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:19667:33340 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:7576:62152 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:7576:62152 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:20290:99818 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:20290:99818 1:N:0:ATTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:1675:50534 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:1675:50534 1:N:0:ATTTCG' because it was < 2 characters long
9028268 reads; of these:
  9028268 (100.00%) were unpaired; of these:
    2853537 (31.61%) aligned 0 times
    3615011 (40.04%) aligned exactly 1 time
    2559720 (28.35%) aligned >1 times
68.39% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:39
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:10
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:13
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:13070:77285 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:13070:77285 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:1708:26442 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:1708:26442 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:12882:44566 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:12882:44566 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:16736:77652 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:16736:77652 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:14682:94812 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:14682:94812 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16768:4663 1:N:0:CATACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16768:4663 1:N:0:CATACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:15463:92095 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:15463:92095 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:17319:37201 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:17319:37201 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:9085:100861 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:9085:100861 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:4571:47708 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:4571:47708 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:3062:64166 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:3062:64166 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:5438:42364 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:5438:42364 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:11830:52900 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:11830:52900 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:7540:84599 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:7540:84599 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:16207:47580 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:16207:47580 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:10007:31922 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:10007:31922 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:18515:17575 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:18515:17575 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4832:58705 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4832:58705 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:6937:35264 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:6937:35264 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:17380:37388 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:17380:37388 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13311:8607 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:13311:8607 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:11545:34580 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:11545:34580 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:12264:67869 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:12264:67869 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:4142:83130 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:4142:83130 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:6004:12636 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:6004:12636 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:18963:82435 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:18963:82435 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:14567:51870 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:14567:51870 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:9394:19015 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:9394:19015 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:13817:33195 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:13817:33195 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:6833:36950 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:6833:36950 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:18874:95618 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1309:18874:95618 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5396:95555 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:5396:95555 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:18500:96726 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:18500:96726 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:3222:45616 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:3222:45616 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:15176:29657 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:15176:29657 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:18321:35878 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:18321:35878 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:15546:96865 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:15546:96865 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:4449:2791 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:4449:2791 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:13257:71602 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:13257:71602 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:14993:82566 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:14993:82566 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:4219:57389 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:4219:57389 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:16916:60566 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:16916:60566 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:16053:91204 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:16053:91204 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:15995:19290 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:15995:19290 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:12130:39529 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:12130:39529 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:7236:85778 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:7236:85778 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:1481:56570 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:1481:56570 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:17830:57921 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:17830:57921 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:20171:100191 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:20171:100191 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:10054:33391 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:10054:33391 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13191:3431 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:13191:3431 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:1137:44067 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:1137:44067 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3330:51368 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3330:51368 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:19550:70970 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:19550:70970 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:20759:57668 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:20759:57668 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:10711:95691 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:10711:95691 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:18940:22085 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:18940:22085 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:4883:50817 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:4883:50817 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:16949:12445 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:16949:12445 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:17839:71241 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:17839:71241 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4318:74553 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4318:74553 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:12339:65187 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:12339:65187 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:5131:91090 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:5131:91090 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:12765:18198 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:12765:18198 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:4829:98290 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:4829:98290 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:18588:99599 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:18588:99599 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:2249:86006 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:2249:86006 1:N:0:CGTACG' because it was < 2 characters long
9324768 reads; of these:
  9324768 (100.00%) were unpaired; of these:
    2873646 (30.82%) aligned 0 times
    3821683 (40.98%) aligned exactly 1 time
    2629439 (28.20%) aligned >1 times
69.18% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:13
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:16
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:13399:73927 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:13399:73927 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:13250:32206 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:13250:32206 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:11889:73679 1:N:0:GAGAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:11889:73679 1:N:0:GAGAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:16227:50146 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:16227:50146 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:16392:49547 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:16392:49547 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:11244:57250 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:11244:57250 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:19064:89702 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:19064:89702 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12916:87644 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12916:87644 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12649:89869 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12649:89869 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:12097:14185 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:12097:14185 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:17646:37637 1:N:0:GAGTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:17646:37637 1:N:0:GAGTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:4004:5930 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:4004:5930 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:15114:92833 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:15114:92833 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:12548:93102 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:12548:93102 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:14594:76685 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:14594:76685 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:14575:60116 1:N:0:CAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:14575:60116 1:N:0:CAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:11886:5675 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:11886:5675 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:20946:21444 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:20946:21444 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:19417:26002 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:19417:26002 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:20794:65662 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:20794:65662 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:5833:73057 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:5833:73057 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1213:14463:5798 1:N:0:AAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1213:14463:5798 1:N:0:AAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:18154:33976 1:N:0:TAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:18154:33976 1:N:0:TAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:16767:72084 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:16767:72084 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:13517:88208 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:13517:88208 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:2290:15510 1:N:0:GAGAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:2290:15510 1:N:0:GAGAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:15692:96604 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1303:15692:96604 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:16027:10683 1:N:0:GAGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:16027:10683 1:N:0:GAGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:18960:23603 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:18960:23603 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:4010:31052 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:4010:31052 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:17254:95272 1:N:0:GAGGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:17254:95272 1:N:0:GAGGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:6350:18446 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:6350:18446 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:17327:47442 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:17327:47442 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:11973:30471 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:11973:30471 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:7082:79640 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1310:7082:79640 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:3693:64248 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:3693:64248 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8990:49900 1:N:0:GAGGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8990:49900 1:N:0:GAGGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:9856:99147 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:9856:99147 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:18353:77632 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:18353:77632 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:17549:92292 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:17549:92292 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:3591:46959 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:3591:46959 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:4511:24849 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:4511:24849 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:13518:64893 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:13518:64893 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:5597:65263 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:5597:65263 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:2548:74312 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2108:2548:74312 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:20575:6787 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:20575:6787 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:13434:23308 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:13434:23308 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:11081:95327 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:11081:95327 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:6097:42812 1:N:0:GAGTTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:6097:42812 1:N:0:GAGTTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:11731:14218 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2116:11731:14218 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:18001:45898 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:18001:45898 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:2636:67788 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:2636:67788 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:5119:39772 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:5119:39772 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:21007:62058 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:21007:62058 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:15315:38329 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:15315:38329 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:19397:75542 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:19397:75542 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:3483:18372 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:3483:18372 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:3559:9867 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:3559:9867 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:11305:26945 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:11305:26945 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:15612:6676 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:15612:6676 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:12461:13413 1:N:0:GAGGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:12461:13413 1:N:0:GAGGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:10962:70003 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:10962:70003 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:15953:61114 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:15953:61114 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:19915:14676 1:N:0:GAGTGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:19915:14676 1:N:0:GAGTGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:1543:44882 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:1543:44882 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:18082:31049 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:18082:31049 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:16322:51180 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:16322:51180 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:13765:60795 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:13765:60795 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:12700:95791 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:12700:95791 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:6154:37453 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:6154:37453 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16735:23782 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16735:23782 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:4314:73934 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:4314:73934 1:N:0:GAGTGG' because it was < 2 characters long
8980704 reads; of these:
  8980704 (100.00%) were unpaired; of these:
    3034627 (33.79%) aligned 0 times
    3487768 (38.84%) aligned exactly 1 time
    2458309 (27.37%) aligned >1 times
66.21% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:00
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:00
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:17532:11960 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:17532:11960 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:5464:95759 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:5464:95759 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:15437:49093 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1103:15437:49093 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16770:61231 1:N:0:ATTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16770:61231 1:N:0:ATTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:13689:84187 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:13689:84187 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:16136:87042 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:16136:87042 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:10019:18540 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:10019:18540 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:19589:19237 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:19589:19237 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:8058:56965 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:8058:56965 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12745:20973 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12745:20973 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:5220:89187 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:5220:89187 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:20903:26692 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:20903:26692 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:4482:50990 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:4482:50990 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1202:16457:46030 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1202:16457:46030 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:11190:30326 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:11190:30326 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:4744:78706 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1205:4744:78706 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:17846:17155 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:17846:17155 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:2847:33932 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:2847:33932 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:9247:100053 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:9247:100053 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:17386:23777 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:17386:23777 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:1773:42424 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:1773:42424 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:7927:92449 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:7927:92449 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:5833:24568 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:5833:24568 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:16996:34835 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:16996:34835 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:1252:70139 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:1252:70139 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:16459:75763 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:16459:75763 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5315:59949 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5315:59949 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:7192:77670 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:7192:77670 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:10593:94305 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:10593:94305 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:13355:6596 1:N:0:GCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:13355:6596 1:N:0:GCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:2822:39354 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:2822:39354 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:10973:54764 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:10973:54764 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:2656:94034 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:2656:94034 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:10494:5794 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:10494:5794 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:2932:56693 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:2932:56693 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:15093:84094 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:15093:84094 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:18583:24388 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:18583:24388 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:11497:24505 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:11497:24505 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:2158:96545 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:2158:96545 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:6049:34910 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2107:6049:34910 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:20998:58264 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:20998:58264 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:18053:42442 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:18053:42442 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:2763:61438 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:2763:61438 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:8941:88246 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2111:8941:88246 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:14881:13130 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:14881:13130 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:19001:29721 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:19001:29721 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6441:98952 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2206:6441:98952 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3666:46894 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3666:46894 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:16312:95702 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:16312:95702 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:9101:27920 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:9101:27920 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:7720:91122 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:7720:91122 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:13791:19992 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:13791:19992 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:19441:34781 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:19441:34781 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:14059:42530 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2214:14059:42530 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:17320:47654 1:N:0:ACTGTT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:17320:47654 1:N:0:ACTGTT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:15118:79900 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:15118:79900 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:13314:85712 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:13314:85712 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:3001:79189 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:3001:79189 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:16165:61571 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2302:16165:61571 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:10192:7870 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:10192:7870 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:18125:88027 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:18125:88027 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:14038:94230 1:N:0:GCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:14038:94230 1:N:0:GCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:5488:32438 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2310:5488:32438 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:17130:5252 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:17130:5252 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:17444:19091 1:N:0:CCTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:17444:19091 1:N:0:CCTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:6683:81496 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:6683:81496 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:5665:2330 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:5665:2330 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:13290:49896 1:N:0:ACTGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:13290:49896 1:N:0:ACTGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:14627:68599 1:N:0:ACTGAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:14627:68599 1:N:0:ACTGAG' because it was < 2 characters long
9022524 reads; of these:
  9022524 (100.00%) were unpaired; of these:
    3037532 (33.67%) aligned 0 times
    3480058 (38.57%) aligned exactly 1 time
    2504934 (27.76%) aligned >1 times
66.33% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:58
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:01
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:11158:53120 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:11158:53120 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16885:68137 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:16885:68137 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8186:66317 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8186:66317 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:6372:88578 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:6372:88578 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:2061:23644 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:2061:23644 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:12295:65530 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:12295:65530 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:15583:45723 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:15583:45723 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:11999:68284 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:11999:68284 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:20076:23063 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:20076:23063 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12838:26675 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:12838:26675 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:9159:92234 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:9159:92234 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:12860:78312 1:N:0:GTTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:12860:78312 1:N:0:GTTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:17132:36415 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:17132:36415 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:13053:49326 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:13053:49326 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:17717:19691 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1112:17717:19691 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:9588:82148 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:9588:82148 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12763:39808 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12763:39808 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:1178:2208 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:1178:2208 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:11379:41553 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:11379:41553 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1202:9856:6512 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1202:9856:6512 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:14864:62873 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:14864:62873 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:18772:64640 1:N:0:CTTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:18772:64640 1:N:0:CTTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:18614:26271 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:18614:26271 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:17447:41254 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:17447:41254 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:14242:7419 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:14242:7419 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:8681:32017 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:8681:32017 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:19132:76767 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:19132:76767 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:12285:59614 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:12285:59614 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:20241:26780 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:20241:26780 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:4973:50709 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:4973:50709 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:10006:46697 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:10006:46697 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:19462:80444 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:19462:80444 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:11911:16815 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:11911:16815 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1301:1675:56797 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1301:1675:56797 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:20668:31099 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:20668:31099 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:6000:48036 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:6000:48036 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:1620:25221 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:1620:25221 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:9618:34231 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:9618:34231 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:11298:99001 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1315:11298:99001 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:3178:88604 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2102:3178:88604 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:11399:36326 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:11399:36326 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:7150:19252 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2112:7150:19252 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:18683:30111 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2113:18683:30111 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:7562:31192 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:7562:31192 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:9031:70266 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:9031:70266 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:6253:10538 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:6253:10538 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:4058:9013 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:4058:9013 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:16117:48127 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:16117:48127 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:15373:78803 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:15373:78803 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:18898:33695 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:18898:33695 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:13927:10098 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:13927:10098 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:4451:10615 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:4451:10615 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:2133:72182 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:2133:72182 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:10030:15700 1:N:0:GTTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:10030:15700 1:N:0:GTTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:13966:83556 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:13966:83556 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:13463:2761 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:13463:2761 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:8085:23989 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:8085:23989 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:11147:52054 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:11147:52054 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:16331:94267 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:16331:94267 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:13715:63417 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2215:13715:63417 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:19843:41596 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2216:19843:41596 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:6565:39396 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:6565:39396 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:19907:49928 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2303:19907:49928 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:12688:5317 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:12688:5317 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:21281:66918 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:21281:66918 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:14153:80941 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:14153:80941 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:1650:99134 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:1650:99134 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:7407:14429 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:7407:14429 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:17549:6731 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:17549:6731 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:3545:58609 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:3545:58609 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:11447:43539 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2315:11447:43539 1:N:0:ATTCCT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:8906:3002 1:N:0:ATTCCT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:8906:3002 1:N:0:ATTCCT' because it was < 2 characters long
9275278 reads; of these:
  9275278 (100.00%) were unpaired; of these:
    2998540 (32.33%) aligned 0 times
    3695149 (39.84%) aligned exactly 1 time
    2581589 (27.83%) aligned >1 times
67.67% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:59
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:00
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:12433:68573 1:N:0:ATCAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:12433:68573 1:N:0:ATCAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:2845:54840 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:2845:54840 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:9944:100081 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:9944:100081 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:10234:94666 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:10234:94666 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8168:21974 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:8168:21974 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:10271:42253 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:10271:42253 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:4410:77929 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1109:4410:77929 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12485:24393 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:12485:24393 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:4623:44620 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:4623:44620 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4478:45625 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4478:45625 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:8775:99622 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1207:8775:99622 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:8018:13176 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:8018:13176 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:4288:24418 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:4288:24418 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:13873:35582 1:N:0:GTCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:13873:35582 1:N:0:GTCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:4456:73676 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1210:4456:73676 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:11775:74432 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:11775:74432 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1213:18368:64148 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1213:18368:64148 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:7737:100179 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:7737:100179 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:18481:12527 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:18481:12527 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:19088:89332 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:19088:89332 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:16599:14838 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1307:16599:14838 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:19010:23922 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:19010:23922 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:18729:95962 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:18729:95962 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:16329:55435 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:16329:55435 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:6862:8940 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:6862:8940 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:20469:11522 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:20469:11522 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:3217:80573 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:3217:80573 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8770:99391 1:N:0:ATTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1314:8770:99391 1:N:0:ATTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:11450:64788 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2103:11450:64788 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:7090:11243 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:7090:11243 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:3894:38923 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:3894:38923 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:12785:30418 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:12785:30418 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:10313:12236 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:10313:12236 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:19250:26955 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:19250:26955 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:12481:50874 1:N:0:ATCACT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2115:12481:50874 1:N:0:ATCACT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:20628:92547 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:20628:92547 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:7771:31348 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:7771:31348 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:17992:34157 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:17992:34157 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:5732:83083 1:N:0:ATCCCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2205:5732:83083 1:N:0:ATCCCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:1437:98259 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:1437:98259 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:19553:7220 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2210:19553:7220 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:2270:6230 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:2270:6230 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:3059:60399 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:3059:60399 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:9186:7323 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:9186:7323 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:16559:7598 1:N:0:ATCAGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:16559:7598 1:N:0:ATCAGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:7791:16082 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:7791:16082 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:15403:40699 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:15403:40699 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:19894:20258 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:19894:20258 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4983:26771 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4983:26771 1:N:0:ATCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:6991:17923 1:N:0:ATCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2311:6991:17923 1:N:0:ATCACG' because it was < 2 characters long
9762207 reads; of these:
  9762207 (100.00%) were unpaired; of these:
    2915480 (29.86%) aligned 0 times
    4038376 (41.37%) aligned exactly 1 time
    2808351 (28.77%) aligned >1 times
70.14% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:04
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:9723:94043 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:9723:94043 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:18625:4678 1:N:0:AGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1201:18625:4678 1:N:0:AGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:20802:99091 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1203:20802:99091 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:10657:67312 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:10657:67312 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:18101:82199 1:N:0:GGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:18101:82199 1:N:0:GGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:18713:100383 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1209:18713:100383 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:4718:5357 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:4718:5357 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:12845:85740 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1302:12845:85740 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:11112:98160 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1304:11112:98160 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:20956:41232 1:N:0:AGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:20956:41232 1:N:0:AGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:9737:51618 1:N:0:CGATGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:9737:51618 1:N:0:CGATGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:13471:69697 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2104:13471:69697 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:19116:29948 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:19116:29948 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:5006:58517 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2211:5006:58517 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:20269:62729 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:20269:62729 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:15159:8474 1:N:0:CGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2306:15159:8474 1:N:0:CGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:7460:49027 1:N:0:GGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2307:7460:49027 1:N:0:GGATGT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16461:12034 1:N:0:GGATGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2316:16461:12034 1:N:0:GGATGT' because it was < 2 characters long
9363793 reads; of these:
  9363793 (100.00%) were unpaired; of these:
    2675513 (28.57%) aligned 0 times
    3803866 (40.62%) aligned exactly 1 time
    2884414 (30.80%) aligned >1 times
71.43% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:00
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:00
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:19771:16665 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1102:19771:16665 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:3048:52401 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1104:3048:52401 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:4125:2176 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:4125:2176 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:17373:20346 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:17373:20346 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:20775:99930 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1105:20775:99930 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:13628:67294 1:N:0:CTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:13628:67294 1:N:0:CTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:17042:80968 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1106:17042:80968 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:17357:76288 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:17357:76288 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:6386:15355 1:N:0:ATAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:6386:15355 1:N:0:ATAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:14623:40815 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1111:14623:40815 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:17391:61932 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1113:17391:61932 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:4591:4255 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1114:4591:4255 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:14621:99204 1:N:0:GTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:14621:99204 1:N:0:GTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:12438:4239 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:12438:4239 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4704:53198 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1206:4704:53198 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:11555:32342 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:11555:32342 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:13182:95881 1:N:0:TTAGGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:13182:95881 1:N:0:TTAGGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:19997:66016 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1211:19997:66016 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:15875:79994 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:15875:79994 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:2483:63735 1:N:0:TTAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:2483:63735 1:N:0:TTAGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:8305:74467 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1214:8305:74467 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:8432:18535 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1215:8432:18535 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:21147:10489 1:N:0:TTAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1216:21147:10489 1:N:0:TTAGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:11575:84257 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:11575:84257 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:10516:90432 1:N:0:CTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1305:10516:90432 1:N:0:CTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:1840:7729 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:1840:7729 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5823:14036 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5823:14036 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5563:32022 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:5563:32022 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:3091:21046 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1312:3091:21046 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:3050:8483 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:3050:8483 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:2649:61308 1:N:0:CTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:2649:61308 1:N:0:CTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:5144:66998 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1313:5144:66998 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:14941:74352 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2101:14941:74352 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:15768:29272 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:15768:29272 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:5961:48388 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2105:5961:48388 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20631:42020 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:20631:42020 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:3193:32118 1:N:0:TTAGGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:3193:32118 1:N:0:TTAGGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:8494:51362 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:8494:51362 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:19233:29013 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:19233:29013 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:19954:34944 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2114:19954:34944 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:15159:73710 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:15159:73710 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:16893:24984 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2209:16893:24984 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:10779:48120 1:N:0:ATAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2212:10779:48120 1:N:0:ATAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:20326:56166 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2213:20326:56166 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:8302:10495 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2304:8302:10495 1:N:0:TTAGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:4750:34015 1:N:0:TTAGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2305:4750:34015 1:N:0:TTAGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:2273:25749 1:N:0:TTAGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2309:2273:25749 1:N:0:TTAGGC' because it was < 2 characters long
9806088 reads; of these:
  9806088 (100.00%) were unpaired; of these:
    3061482 (31.22%) aligned 0 times
    3898166 (39.75%) aligned exactly 1 time
    2846440 (29.03%) aligned >1 times
68.78% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:56
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:59
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:9028:1954 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1101:9028:1954 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:1293:13199 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1107:1293:13199 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:5118:53750 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1108:5118:53750 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:18794:58691 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1110:18794:58691 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:17961:68320 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1115:17961:68320 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:8752:18869 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1116:8752:18869 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:21385:51736 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1204:21385:51736 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:9860:34403 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1208:9860:34403 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:16639:49336 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1212:16639:49336 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:17865:13042 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1306:17865:13042 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:10073:2920 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:10073:2920 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:1560:20779 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1308:1560:20779 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:16541:15805 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1311:16541:15805 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:17742:52910 1:N:0:TGACAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:1316:17742:52910 1:N:0:TGACAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:16328:11670 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:16328:11670 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:5108:42459 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:5108:42459 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:19638:91608 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2106:19638:91608 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:15352:69212 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2109:15352:69212 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:12274:35709 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:12274:35709 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:17522:77999 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2110:17522:77999 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:6503:21167 1:N:0:GGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2201:6503:21167 1:N:0:GGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:12867:33774 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2202:12867:33774 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:13128:24584 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:13128:24584 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:12719:64588 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2203:12719:64588 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:6066:93952 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2204:6066:93952 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3547:18200 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:3547:18200 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:9075:26083 1:N:0:TGACGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2207:9075:26083 1:N:0:TGACGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:12046:80102 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2208:12046:80102 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:15386:65483 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2301:15386:65483 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4613:76244 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2308:4613:76244 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:6495:37921 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2312:6495:37921 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:19323:39980 1:N:0:TGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2313:19323:39980 1:N:0:TGACCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:4542:36385 1:N:0:CGACCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:3:2314:4542:36385 1:N:0:CGACCA' because it was < 2 characters long
9877612 reads; of these:
  9877612 (100.00%) were unpaired; of these:
    3096654 (31.35%) aligned 0 times
    3922227 (39.71%) aligned exactly 1 time
    2858731 (28.94%) aligned >1 times
68.65% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:58
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:01
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1108:17463:9800 1:N:0:AGTCGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1108:17463:9800 1:N:0:AGTCGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:18952:55679 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:18952:55679 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1112:5578:23697 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1112:5578:23697 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1203:13352:81118 1:N:0:AGTAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1203:13352:81118 1:N:0:AGTAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:9274:17563 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:9274:17563 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:19047:20927 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:19047:20927 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:7617:88129 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:7617:88129 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:12241:11392 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:12241:11392 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:19961:73846 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:19961:73846 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1306:4990:2367 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1306:4990:2367 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:14047:79364 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:14047:79364 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:11939:80096 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:11939:80096 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:10301:63130 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:10301:63130 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:6290:80769 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:6290:80769 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1315:13864:77091 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1315:13864:77091 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2103:21374:97188 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2103:21374:97188 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:13397:7146 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:13397:7146 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:20259:11410 1:N:0:AGTTAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:20259:11410 1:N:0:AGTTAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:8918:78678 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:8918:78678 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:7539:25262 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:7539:25262 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:19070:36608 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:19070:36608 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2209:3892:69619 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2209:3892:69619 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:8815:21432 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:8815:21432 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:12445:64820 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:12445:64820 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2212:5687:8133 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2212:5687:8133 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2213:12008:85194 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2213:12008:85194 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2215:9078:36216 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2215:9078:36216 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2216:12512:17923 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2216:12512:17923 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2301:10433:51394 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2301:10433:51394 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2303:6606:36979 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2303:6606:36979 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2309:8952:59844 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2309:8952:59844 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2309:15729:71172 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2309:15729:71172 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:5850:28250 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:5850:28250 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:15720:48686 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:15720:48686 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2315:19630:72556 1:N:0:AGTCAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2315:19630:72556 1:N:0:AGTCAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2316:9503:76187 1:N:0:AGTTAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2316:9503:76187 1:N:0:AGTTAA' because it was < 2 characters long
8868025 reads; of these:
  8868025 (100.00%) were unpaired; of these:
    2630739 (29.67%) aligned 0 times
    3708718 (41.82%) aligned exactly 1 time
    2528568 (28.51%) aligned >1 times
70.33% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:59
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:05
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:14456:74675 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:14456:74675 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1110:5601:8200 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1110:5601:8200 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1115:14390:72175 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1115:14390:72175 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1116:16629:94963 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1116:16629:94963 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:8375:41405 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:8375:41405 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:7726:92937 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:7726:92937 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:7765:14566 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:7765:14566 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:6036:6477 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:6036:6477 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:7155:18601 1:N:0:AGCTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:7155:18601 1:N:0:AGCTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:21100:40947 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1311:21100:40947 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2103:2144:81011 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2103:2144:81011 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2104:9455:31342 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2104:9455:31342 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:18602:54621 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:18602:54621 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2107:4782:73869 1:N:0:AGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2107:4782:73869 1:N:0:AGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2108:6605:60312 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2108:6605:60312 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2114:12522:37475 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2114:12522:37475 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2203:19071:22945 1:N:0:CGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2203:19071:22945 1:N:0:CGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2206:17873:67506 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2206:17873:67506 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:5701:23692 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:5701:23692 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:6868:39896 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:6868:39896 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2212:14228:76133 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2212:14228:76133 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2302:5576:45261 1:N:0:AGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2302:5576:45261 1:N:0:AGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2307:8942:43479 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2307:8942:43479 1:N:0:AGTTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2312:13337:40179 1:N:0:AGTTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2312:13337:40179 1:N:0:AGTTCC' because it was < 2 characters long
8471271 reads; of these:
  8471271 (100.00%) were unpaired; of these:
    2599718 (30.69%) aligned 0 times
    3402839 (40.17%) aligned exactly 1 time
    2468714 (29.14%) aligned >1 times
69.31% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:02
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:05
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1102:13607:35756 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1102:13607:35756 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1102:6572:73055 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1102:6572:73055 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1103:8228:83473 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1103:8228:83473 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1107:14816:19019 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1107:14816:19019 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:8572:30060 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:8572:30060 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:12826:89469 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:12826:89469 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1113:5976:31242 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1113:5976:31242 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1113:11324:79115 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1113:11324:79115 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1202:2342:45445 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1202:2342:45445 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1204:3602:8272 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1204:3602:8272 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:8666:38367 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1205:8666:38367 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1206:11919:3185 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1206:11919:3185 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1206:2238:50850 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1206:2238:50850 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:10285:31569 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:10285:31569 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1212:9973:79902 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1212:9973:79902 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1214:11349:6681 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1214:11349:6681 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1215:3195:100663 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1215:3195:100663 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1301:5850:22469 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1301:5850:22469 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:7469:18109 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1303:7469:18109 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1304:13906:93833 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1304:13906:93833 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1305:12735:59847 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1305:12735:59847 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1306:20137:57469 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1306:20137:57469 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1307:9724:60112 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1307:9724:60112 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1309:15119:29685 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1309:15119:29685 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1313:11405:83898 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1313:11405:83898 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2105:9228:54979 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2105:9228:54979 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:3257:32633 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2106:3257:32633 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:10669:77410 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:10669:77410 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2111:4892:27672 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2111:4892:27672 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2113:11478:98232 1:N:0:ATGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2113:11478:98232 1:N:0:ATGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:11180:15405 1:N:0:ATGTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:11180:15405 1:N:0:ATGTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2201:7565:90746 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2201:7565:90746 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2205:3746:30624 1:N:0:GTGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2205:3746:30624 1:N:0:GTGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2207:10846:24038 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2207:10846:24038 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:4324:6090 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:4324:6090 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:5464:34725 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:5464:34725 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:20047:69573 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:20047:69573 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:18160:76711 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2211:18160:76711 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2213:20371:11172 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2213:20371:11172 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2301:19895:22640 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2301:19895:22640 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2304:7703:11314 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2304:7703:11314 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2305:10016:51513 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2305:10016:51513 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2306:13312:85794 1:N:0:ATGTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2306:13312:85794 1:N:0:ATGTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2307:3036:71099 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2307:3036:71099 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2311:17472:76187 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2311:17472:76187 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:11060:70570 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:11060:70570 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:7739:86819 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:7739:86819 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:5559:89267 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2313:5559:89267 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2314:14063:48990 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2314:14063:48990 1:N:0:ATGTCA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2314:13432:94919 1:N:0:ATGTCA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2314:13432:94919 1:N:0:ATGTCA' because it was < 2 characters long
8893590 reads; of these:
  8893590 (100.00%) were unpaired; of these:
    2734832 (30.75%) aligned 0 times
    3537725 (39.78%) aligned exactly 1 time
    2621033 (29.47%) aligned >1 times
69.25% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:02
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:05
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:6165:24061 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1109:6165:24061 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1110:10868:9421 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1110:10868:9421 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:14748:77295 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1111:14748:77295 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1204:19676:11548 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1204:19676:11548 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:14224:4829 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1207:14224:4829 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:9147:64031 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1209:9147:64031 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1210:20694:51801 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1210:20694:51801 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1211:4987:41851 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1211:4987:41851 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1213:1967:61460 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1213:1967:61460 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1214:6357:71107 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1214:6357:71107 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1305:13289:75287 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1305:13289:75287 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1310:5113:6388 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1310:5113:6388 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:18295:70080 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1314:18295:70080 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1315:7279:35844 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:1315:7279:35844 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2104:20794:61522 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2104:20794:61522 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:14524:66063 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2109:14524:66063 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:16580:45114 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2115:16580:45114 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2116:10413:85991 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2116:10413:85991 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:19858:33689 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2208:19858:33689 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:15936:15874 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2210:15936:15874 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2214:14533:64489 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2214:14533:64489 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2215:10570:40956 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2215:10570:40956 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2302:20368:89098 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2302:20368:89098 1:N:0:CCGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2311:9252:55828 1:N:0:CCGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:5:2311:9252:55828 1:N:0:CCGTCC' because it was < 2 characters long
8581958 reads; of these:
  8581958 (100.00%) were unpaired; of these:
    2647127 (30.85%) aligned 0 times
    3434093 (40.02%) aligned exactly 1 time
    2500738 (29.14%) aligned >1 times
69.15% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:07
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:13
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:2082:74808 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:2082:74808 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1114:5962:70326 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1114:5962:70326 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:13981:19366 1:N:0:GTTTAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:13981:19366 1:N:0:GTTTAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:11417:80867 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:11417:80867 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1208:1912:51558 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1208:1912:51558 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:3844:11111 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:3844:11111 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:8852:53733 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:8852:53733 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:20209:40645 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:20209:40645 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:6408:37259 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:6408:37259 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1303:2461:29979 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1303:2461:29979 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:10201:99540 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:10201:99540 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1308:7986:46546 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1308:7986:46546 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1312:13877:76803 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1312:13877:76803 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:13974:58982 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:13974:58982 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:13730:18827 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:13730:18827 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1316:20607:71147 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1316:20607:71147 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:11274:15197 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:11274:15197 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:12807:8300 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:12807:8300 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:13044:59194 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:13044:59194 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:20552:4550 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:20552:4550 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:8071:33343 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:8071:33343 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2107:17568:90578 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2107:17568:90578 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:5375:32372 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:5375:32372 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:20961:52703 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:20961:52703 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:13820:82031 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:13820:82031 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:16530:85494 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:16530:85494 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2115:6331:67553 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2115:6331:67553 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2208:6709:67634 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2208:6709:67634 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:12900:58021 1:N:0:GTTCCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:12900:58021 1:N:0:GTTCCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:14104:81146 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:14104:81146 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2301:8451:62390 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2301:8451:62390 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2304:3542:8585 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2304:3542:8585 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:20325:62025 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:20325:62025 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:11229:70858 1:N:0:ATTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:11229:70858 1:N:0:ATTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:17549:74357 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:17549:74357 1:N:0:GTTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2312:5223:18148 1:N:0:GGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2312:5223:18148 1:N:0:GGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:19838:34178 1:N:0:GTTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:19838:34178 1:N:0:GTTTCG' because it was < 2 characters long
9047288 reads; of these:
  9047288 (100.00%) were unpaired; of these:
    2828897 (31.27%) aligned 0 times
    3646341 (40.30%) aligned exactly 1 time
    2572050 (28.43%) aligned >1 times
68.73% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:03
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:11
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:19291:79542 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:19291:79542 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1105:4444:51780 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1105:4444:51780 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:11380:84777 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:11380:84777 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:10270:100381 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:10270:100381 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:8980:22101 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:8980:22101 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:19138:60320 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:19138:60320 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1114:4233:56828 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1114:4233:56828 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:15299:10393 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:15299:10393 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:7026:52739 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:7026:52739 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1204:5116:7298 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1204:5116:7298 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:16330:40514 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:16330:40514 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1213:11939:62626 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1213:11939:62626 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1215:10182:99892 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1215:10182:99892 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:5117:2612 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:5117:2612 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:14923:82990 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1216:14923:82990 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1303:13888:43054 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1303:13888:43054 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1304:16961:27870 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1304:16961:27870 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:14556:17862 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:14556:17862 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:16073:59297 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:16073:59297 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:5092:14144 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:5092:14144 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1307:18924:31177 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1307:18924:31177 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:14085:24041 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:14085:24041 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:11220:68732 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:11220:68732 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:6768:85023 1:N:0:CGCACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:6768:85023 1:N:0:CGCACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:16397:23809 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:16397:23809 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:19744:60495 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:19744:60495 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2102:18271:31499 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2102:18271:31499 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:15729:36645 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:15729:36645 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:11664:84916 1:N:0:CGTTCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2106:11664:84916 1:N:0:CGTTCG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2107:19280:84202 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2107:19280:84202 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2109:15488:22896 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2109:15488:22896 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:18535:87024 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:18535:87024 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2204:7294:15783 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2204:7294:15783 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2206:3813:73436 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2206:3813:73436 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:6778:84817 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:6778:84817 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:20490:16409 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:20490:16409 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:18104:92450 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:18104:92450 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:19507:18338 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:19507:18338 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2216:3093:21365 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2216:3093:21365 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:9213:93627 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:9213:93627 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:13527:20893 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:13527:20893 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:20318:75043 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:20318:75043 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:2737:78574 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2311:2737:78574 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:4410:83427 1:N:0:CGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:4410:83427 1:N:0:CGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:14942:32180 1:N:0:GGTACG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:14942:32180 1:N:0:GGTACG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:8998:38052 1:N:0:CGTGCG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:8998:38052 1:N:0:CGTGCG' because it was < 2 characters long
8575590 reads; of these:
  8575590 (100.00%) were unpaired; of these:
    2699895 (31.48%) aligned 0 times
    3436194 (40.07%) aligned exactly 1 time
    2439501 (28.45%) aligned >1 times
68.52% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:04
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:4796:22020 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:4796:22020 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:16787:25638 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:16787:25638 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:13375:27020 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:13375:27020 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:3699:3411 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:3699:3411 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:20668:30518 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:20668:30518 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:5405:43894 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:5405:43894 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1202:21098:20726 1:N:0:GAGTAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1202:21098:20726 1:N:0:GAGTAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:18441:93570 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:18441:93570 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:12957:77377 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1212:12957:77377 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1302:12259:61564 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1302:12259:61564 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:12994:57827 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:12994:57827 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:20562:17545 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:20562:17545 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:8288:24532 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:8288:24532 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:12670:37724 1:N:0:GAGCGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2104:12670:37724 1:N:0:GAGCGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:14459:15373 1:N:0:AAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:14459:15373 1:N:0:AAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:11873:12544 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:11873:12544 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2113:16201:66504 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2113:16201:66504 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:10414:35344 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:10414:35344 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:12292:88059 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:12292:88059 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:12511:61967 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:12511:61967 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2207:16248:40491 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2207:16248:40491 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2209:6150:61744 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2209:6150:61744 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:5764:88376 1:N:0:GAGGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:5764:88376 1:N:0:GAGGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2302:6662:77992 1:N:0:AAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2302:6662:77992 1:N:0:AAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:16108:41050 1:N:0:GCGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:16108:41050 1:N:0:GCGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2307:19365:43343 1:N:0:CAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2307:19365:43343 1:N:0:CAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:3853:6046 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:3853:6046 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:13365:56512 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2309:13365:56512 1:N:0:GAGTGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:5334:8426 1:N:0:GAGTGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:5334:8426 1:N:0:GAGTGG' because it was < 2 characters long
8765727 reads; of these:
  8765727 (100.00%) were unpaired; of these:
    2712508 (30.94%) aligned 0 times
    3577016 (40.81%) aligned exactly 1 time
    2476203 (28.25%) aligned >1 times
69.06% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:39
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:07
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:11
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:18
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:09
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:13617:29634 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1110:13617:29634 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:9702:46901 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:9702:46901 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:19251:83034 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1115:19251:83034 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:18084:79913 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:18084:79913 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1207:15822:34729 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1207:15822:34729 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1207:12732:86785 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1207:12732:86785 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1215:5914:28547 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1215:5914:28547 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:18742:47613 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:18742:47613 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:19462:84792 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:19462:84792 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:7464:98623 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:7464:98623 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:12781:39540 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:12781:39540 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1304:6386:55830 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1304:6386:55830 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:4109:2305 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:4109:2305 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1310:12061:21574 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1310:12061:21574 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:15961:19607 1:N:0:ACAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:15961:19607 1:N:0:ACAGGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:15830:67207 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:15830:67207 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1314:15070:20600 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1314:15070:20600 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:9792:9956 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:9792:9956 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:10453:60226 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:10453:60226 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:12602:98917 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:12602:98917 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:8270:70633 1:N:0:ACGGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:8270:70633 1:N:0:ACGGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:19111:85691 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:19111:85691 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2112:17265:39457 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2112:17265:39457 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2201:9082:75688 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2201:9082:75688 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:1636:73192 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2202:1636:73192 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:19422:64324 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:19422:64324 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2208:21163:57055 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2208:21163:57055 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:3706:48672 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:3706:48672 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:3518:64533 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:3518:64533 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2212:14224:82667 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2212:14224:82667 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:19903:17204 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:19903:17204 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:16731:36109 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2213:16731:36109 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2214:3838:95690 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2214:3838:95690 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:20479:63682 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:20479:63682 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:15376:46594 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:15376:46594 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:18896:71847 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:18896:71847 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2310:6773:88110 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2310:6773:88110 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:9625:55359 1:N:0:ACAGGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:9625:55359 1:N:0:ACAGGG' because it was < 2 characters long
9574625 reads; of these:
  9574625 (100.00%) were unpaired; of these:
    2935956 (30.66%) aligned 0 times
    3866030 (40.38%) aligned exactly 1 time
    2772639 (28.96%) aligned >1 times
69.34% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:58
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:01
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1103:7049:18983 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1103:7049:18983 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:14353:67979 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1104:14353:67979 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:10639:33196 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:10639:33196 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:5480:2645 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:5480:2645 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:10534:85653 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1109:10534:85653 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:4710:53631 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:4710:53631 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:11326:54568 1:N:0:GCCAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:11326:54568 1:N:0:GCCAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1204:8324:12947 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1204:8324:12947 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:14572:16666 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:14572:16666 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:18010:12289 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1210:18010:12289 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1212:4453:43263 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1212:4453:43263 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1215:11366:45176 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1215:11366:45176 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:8719:34950 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:8719:34950 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:15369:11570 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:15369:11570 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:3956:97086 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1313:3956:97086 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2102:3590:62531 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2102:3590:62531 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:9665:43750 1:N:0:CCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2104:9665:43750 1:N:0:CCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:10281:47926 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2105:10281:47926 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:16113:23171 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:16113:23171 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:8800:2798 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2107:8800:2798 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2108:8153:90195 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2108:8153:90195 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2111:10357:65670 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2111:10357:65670 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:12666:82775 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:12666:82775 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:1283:71594 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:1283:71594 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:9266:30015 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2207:9266:30015 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:5696:56631 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:5696:56631 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:2394:97269 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2302:2394:97269 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2305:19026:32395 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2305:19026:32395 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:7324:69684 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2306:7324:69684 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2307:6641:8529 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2307:6641:8529 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2307:11919:56386 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2307:11919:56386 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2308:6982:97416 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2308:6982:97416 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:16066:31799 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2309:16066:31799 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2310:3746:15381 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2310:3746:15381 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2311:10944:78273 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2311:10944:78273 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:3331:57050 1:N:0:GCCGAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:3331:57050 1:N:0:GCCGAT' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2314:5391:99087 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2314:5391:99087 1:N:0:GCCAAT' because it was < 2 characters long
9328722 reads; of these:
  9328722 (100.00%) were unpaired; of these:
    4406237 (47.23%) aligned 0 times
    2839719 (30.44%) aligned exactly 1 time
    2082766 (22.33%) aligned >1 times
52.77% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:04:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:56
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1103:12435:15706 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1103:12435:15706 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:7374:76781 1:N:0:GAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:7374:76781 1:N:0:GAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:9451:34617 1:N:0:CAGATA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1106:9451:34617 1:N:0:CAGATA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1112:9511:79039 1:N:0:CCGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1112:9511:79039 1:N:0:CCGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:4383:85800 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1208:4383:85800 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:13795:7497 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1214:13795:7497 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:2087:53873 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1301:2087:53873 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:15730:39234 1:N:0:CCGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:15730:39234 1:N:0:CCGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:12796:52586 1:N:0:CTGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1302:12796:52586 1:N:0:CTGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1303:15972:45765 1:N:0:CCGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1303:15972:45765 1:N:0:CCGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1306:20817:48842 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1306:20817:48842 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1309:6905:78523 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1309:6905:78523 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1310:4079:14608 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1310:4079:14608 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:5545:36158 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:5545:36158 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:15844:58842 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1311:15844:58842 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:11123:28789 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1316:11123:28789 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:14986:65163 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:14986:65163 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:14677:76459 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2210:14677:76459 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2211:19347:72550 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2211:19347:72550 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:3928:49791 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:3928:49791 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2305:13029:6594 1:N:0:CCGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2305:13029:6594 1:N:0:CCGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:17643:75134 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:17643:75134 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:7837:15697 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:7837:15697 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:12976:90271 1:N:0:AAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:12976:90271 1:N:0:AAGATC' because it was < 2 characters long
8741680 reads; of these:
  8741680 (100.00%) were unpaired; of these:
    2862532 (32.75%) aligned 0 times
    3381167 (38.68%) aligned exactly 1 time
    2497981 (28.58%) aligned >1 times
67.25% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:58
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:59
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:6798:52181 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1105:6798:52181 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:19627:94911 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1107:19627:94911 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1111:10482:27648 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1111:10482:27648 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:18802:17807 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1113:18802:17807 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:19614:77651 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1203:19614:77651 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:2415:19256 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1205:2415:19256 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1206:4697:10425 1:N:0:GCTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1206:4697:10425 1:N:0:GCTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:14440:12623 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1305:14440:12623 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:17658:70490 1:N:0:ACTTGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1307:17658:70490 1:N:0:ACTTGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1309:20971:38892 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1309:20971:38892 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:6811:26353 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:6811:26353 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:3680:97722 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:1312:3680:97722 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:1836:64733 1:N:0:GCTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2106:1836:64733 1:N:0:GCTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:12546:30200 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2109:12546:30200 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2112:13718:28040 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2112:13718:28040 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:21128:53693 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2115:21128:53693 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:19114:12256 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:19114:12256 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:17293:97132 1:N:0:GCTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2205:17293:97132 1:N:0:GCTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2208:3064:98282 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2208:3064:98282 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2209:20408:38695 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2209:20408:38695 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:14799:92368 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2215:14799:92368 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:16203:94852 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2216:16203:94852 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2303:9378:7343 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2303:9378:7343 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:13926:25961 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:13926:25961 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:15058:88560 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2312:15058:88560 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:5426:100637 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2313:5426:100637 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2316:8947:27031 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2316:8947:27031 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2316:5066:42275 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:4:2316:5066:42275 1:N:0:ACTTGA' because it was < 2 characters long
9367344 reads; of these:
  9367344 (100.00%) were unpaired; of these:
    2876036 (30.70%) aligned 0 times
    3737288 (39.90%) aligned exactly 1 time
    2754020 (29.40%) aligned >1 times
69.30% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:57
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:59
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:20303:83913 1:N:0:GTCCGG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:20303:83913 1:N:0:GTCCGG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:9345:91316 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1106:9345:91316 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:10228:39049 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1110:10228:39049 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:9678:15283 1:N:0:ATCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:9678:15283 1:N:0:ATCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:4209:96659 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:4209:96659 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1304:16068:73680 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1304:16068:73680 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:10200:99998 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:10200:99998 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:14348:68137 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:14348:68137 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:8884:76047 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:8884:76047 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:5532:96718 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:5532:96718 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:7444:54774 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:7444:54774 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1316:12912:30339 1:N:0:ATCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1316:12912:30339 1:N:0:ATCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:3592:44934 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:3592:44934 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:7849:30210 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:7849:30210 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:13864:71039 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:13864:71039 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:17731:71036 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:17731:71036 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:10428:95081 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2203:10428:95081 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2205:6572:76775 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2205:6572:76775 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:6310:27442 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2210:6310:27442 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2212:19524:53542 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2212:19524:53542 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:19682:29209 1:N:0:GTCGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:19682:29209 1:N:0:GTCGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:5308:100785 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2308:5308:100785 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2313:16708:83635 1:N:0:GTCCGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2313:16708:83635 1:N:0:GTCCGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2316:15273:40685 1:N:0:GTCGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2316:15273:40685 1:N:0:GTCGGC' because it was < 2 characters long
8593005 reads; of these:
  8593005 (100.00%) were unpaired; of these:
    2597950 (30.23%) aligned 0 times
    3442546 (40.06%) aligned exactly 1 time
    2552509 (29.70%) aligned >1 times
69.77% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:37
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:58
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:01
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:17260:59940 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:17260:59940 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:15720:85887 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:15720:85887 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1103:18924:29799 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1103:18924:29799 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1105:12160:47373 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1105:12160:47373 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1111:9664:28973 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1111:9664:28973 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:17674:28890 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:17674:28890 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:5919:79205 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1113:5919:79205 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1202:5516:12105 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1202:5516:12105 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1203:16853:28483 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1203:16853:28483 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1203:4930:32133 1:N:0:GAGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1203:4930:32133 1:N:0:GAGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:8436:65099 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:8436:65099 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1211:3032:88344 1:N:0:ATGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1211:3032:88344 1:N:0:ATGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:9057:56002 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:9057:56002 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:8185:16479 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:8185:16479 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1307:13332:67787 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1307:13332:67787 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:18785:26098 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:18785:26098 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:10023:78497 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:10023:78497 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:5149:80547 1:N:0:GTGAAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:5149:80547 1:N:0:GTGAAG' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:4445:92938 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2111:4445:92938 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:2496:68468 1:N:0:GCGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:2496:68468 1:N:0:GCGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2202:15577:31456 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2202:15577:31456 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2206:2960:31613 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2206:2960:31613 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:6257:87232 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2211:6257:87232 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2212:3835:59877 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2212:3835:59877 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2307:8859:46605 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2307:8859:46605 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2310:3270:50780 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2310:3270:50780 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:2918:33500 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:2918:33500 1:N:0:GTGAAA' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:19240:85929 1:N:0:GTGAAA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2314:19240:85929 1:N:0:GTGAAA' because it was < 2 characters long
9193268 reads; of these:
  9193268 (100.00%) were unpaired; of these:
    3197220 (34.78%) aligned 0 times
    3449693 (37.52%) aligned exactly 1 time
    2546355 (27.70%) aligned >1 times
65.22% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:14
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:57
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:04:01
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:3582:57471 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1102:3582:57471 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:16755:48119 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:16755:48119 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:11612:73419 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1104:11612:73419 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:20589:59270 1:N:0:GTGGGC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1108:20589:59270 1:N:0:GTGGGC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:15114:70141 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1115:15114:70141 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:17692:68133 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:17692:68133 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:3838:92331 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1116:3838:92331 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:17050:5367 1:N:0:GTGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:17050:5367 1:N:0:GTGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:15084:25343 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:15084:25343 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:9187:26370 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1207:9187:26370 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1208:18791:9497 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1208:18791:9497 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:2537:19519 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1210:2537:19519 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1213:5915:88011 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1213:5915:88011 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:7394:50559 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:7394:50559 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:14553:83974 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1214:14553:83974 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:8940:73842 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1305:8940:73842 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:17428:29178 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:17428:29178 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:14267:39988 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:14267:39988 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:7257:87135 1:N:0:GTGGTC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1306:7257:87135 1:N:0:GTGGTC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:16703:80103 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1310:16703:80103 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:8072:13360 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1313:8072:13360 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:3913:31863 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:3913:31863 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:16868:93740 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1314:16868:93740 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:16754:61230 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:16754:61230 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:15443:64346 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:15443:64346 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:11887:85434 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:1315:11887:85434 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:19790:28374 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2101:19790:28374 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:3516:96025 1:N:0:ATGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2105:3516:96025 1:N:0:ATGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2109:14335:50606 1:N:0:GAGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2109:14335:50606 1:N:0:GAGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:12871:41364 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:12871:41364 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:10602:82468 1:N:0:GTGTCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2110:10602:82468 1:N:0:GTGTCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:8935:58635 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2114:8935:58635 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2115:14507:46933 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2115:14507:46933 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:7984:52675 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:7984:52675 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:16382:61139 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:16382:61139 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:12032:98132 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2116:12032:98132 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2205:7479:20718 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2205:7479:20718 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2208:8522:46643 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2208:8522:46643 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:9727:86849 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:9727:86849 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:3517:93349 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2215:3517:93349 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:11895:2392 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:11895:2392 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:7575:58762 1:N:0:GTGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2305:7575:58762 1:N:0:GTGGCC' because it was < 2 characters long
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:3857:82216 1:N:0:ATGGCC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'DJTPB5M1:367:C5H1BACXX:6:2315:3857:82216 1:N:0:ATGGCC' because it was < 2 characters long
8811284 reads; of these:
  8811284 (100.00%) were unpaired; of these:
    3172774 (36.01%) aligned 0 times
    3181488 (36.11%) aligned exactly 1 time
    2457022 (27.88%) aligned >1 times
63.99% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:53
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:32
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:24
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:17
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:58
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1113:13476:94462 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1113:13476:94462 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1310:12724:45585 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1310:12724:45585 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1314:8842:69965 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1314:8842:69965 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2107:16038:94804 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2107:16038:94804 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2115:4849:55877 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2115:4849:55877 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2210:10586:71568 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2210:10586:71568 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2214:8710:46872 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2214:8710:46872 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2215:4155:29730 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2215:4155:29730 1:N:0:ACAGTG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2301:11269:53273 1:N:0:ACAGTG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2301:11269:53273 1:N:0:ACAGTG' because it was < 2 characters long
8323685 reads; of these:
  8323685 (100.00%) were unpaired; of these:
    2526960 (30.36%) aligned 0 times
    3496664 (42.01%) aligned exactly 1 time
    2300061 (27.63%) aligned >1 times
69.64% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:57
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:31
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:55
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1305:6072:81403 1:N:0:GCCAGT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1305:6072:81403 1:N:0:GCCAGT' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1310:10944:36668 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1310:10944:36668 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2106:19568:95589 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2106:19568:95589 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2204:19506:13933 1:N:0:GCCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2204:19506:13933 1:N:0:GCCAAT' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2307:5529:54792 1:N:0:ACCAAT' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2307:5529:54792 1:N:0:ACCAAT' because it was < 2 characters long
8315650 reads; of these:
  8315650 (100.00%) were unpaired; of these:
    2585320 (31.09%) aligned 0 times
    3462776 (41.64%) aligned exactly 1 time
    2267554 (27.27%) aligned >1 times
68.91% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1102:8276:41695 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1102:8276:41695 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1304:3695:47077 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1304:3695:47077 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1312:19476:9863 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1312:19476:9863 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1314:10581:99299 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1314:10581:99299 1:N:0:CAGATC' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2115:2288:18382 1:N:0:CAGATC' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2115:2288:18382 1:N:0:CAGATC' because it was < 2 characters long
7731636 reads; of these:
  7731636 (100.00%) were unpaired; of these:
    2505250 (32.40%) aligned 0 times
    3173637 (41.05%) aligned exactly 1 time
    2052749 (26.55%) aligned >1 times
67.60% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:42
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1110:7680:73034 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1110:7680:73034 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1309:14741:6490 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1309:14741:6490 1:N:0:ACTTGA' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2116:17445:19183 1:N:0:ACTTGA' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2116:17445:19183 1:N:0:ACTTGA' because it was < 2 characters long
7834465 reads; of these:
  7834465 (100.00%) were unpaired; of these:
    2414620 (30.82%) aligned 0 times
    3318182 (42.35%) aligned exactly 1 time
    2101663 (26.83%) aligned >1 times
69.18% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1116:18509:80105 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1116:18509:80105 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1302:10611:80512 1:N:0:TATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1302:10611:80512 1:N:0:TATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1304:19067:5129 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:1304:19067:5129 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2101:18877:51956 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2101:18877:51956 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2204:11478:67217 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2204:11478:67217 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2206:17603:79315 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2206:17603:79315 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2210:20245:83650 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2210:20245:83650 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2304:19545:45833 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2304:19545:45833 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2311:14748:17683 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2311:14748:17683 1:N:0:GATCAG' because it was < 2 characters long
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2313:9865:61740 1:N:0:GATCAG' because length (1) <= # seed mismatches (0)
Warning: skipping read 'HWI-ST212:255:C1802ACXX:2:2313:9865:61740 1:N:0:GATCAG' because it was < 2 characters long
7820507 reads; of these:
  7820507 (100.00%) were unpaired; of these:
    2412697 (30.85%) aligned 0 times
    3368114 (43.07%) aligned exactly 1 time
    2039696 (26.08%) aligned >1 times
69.15% overall alignment rate
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 349_2_1_C1802ACXX_TAGCTT_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 349_3_1_C1802ACXX_GGCTAC_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:13
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:30
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 349_4_1_C1802ACXX_CTTGTA_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 356_1_1_C1802ACXX_CGTACG_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:10
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 356_2_1_C1802ACXX_GAGTGG_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:41
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 356_3_1_C1802ACXX_ACTGAT_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 356_4_1_C1802ACXX_ATTCCT_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:38
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:41
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 373_1_1_C1802ACXX_ATCACG_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:37
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:40
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 373_2_1_C1802ACXX_CGATGT_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:22
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:39
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 373_3_1_C1802ACXX_TTAGGC_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:07
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:33
Returning block of 22771480 for bucket 1
Getting block 2 of 7
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 17530354 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17530355 for bucket 2
Getting block 3 of 7
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 17564452 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 17564453 for bucket 3
Getting block 4 of 7
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 18263332 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18263333 for bucket 4
Getting block 5 of 7
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 19541363 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 19541364 for bucket 5
Getting block 6 of 7
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 18049405 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 18049406 for bucket 6
Getting block 7 of 7
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 8082817 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8082818 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:03:36
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.35337e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 6192066 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:09
Returning block of 6192067 for bucket 1
Getting block 2 of 9
  Reserving size (22838102) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 20110618 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:29
Returning block of 20110619 for bucket 2
Getting block 3 of 9
  Reserving size (22838102) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 9734200 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 9734201 for bucket 3
Getting block 4 of 9
  Reserving size (22838102) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 16068834 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 16068835 for bucket 4
Getting block 5 of 9
  Reserving size (22838102) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 8187706 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 8187707 for bucket 5
Getting block 6 of 9
  Reserving size (22838102) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 15755413 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:23
Returning block of 15755414 for bucket 6
Getting block 7 of 9
  Reserving size (22838102) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 17175964 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:25
Returning block of 17175965 for bucket 7
Getting block 8 of 9
  Reserving size (22838102) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 10316629 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:16
Returning block of 10316630 for bucket 8
Getting block 9 of 9
  Reserving size (22838102) for bucket 9
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 9:
  bucket 9: 10%
  bucket 9: 20%
  bucket 9: 30%
  bucket 9: 40%
  bucket 9: 50%
  bucket 9: 60%
  bucket 9: 70%
  bucket 9: 80%
  bucket 9: 90%
  bucket 9: 100%
  Sorting block of length 18261770 for bucket 9
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 18261771 for bucket 9
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 35122117
fchr[G]: 61302371
fchr[T]: 89318600
fchr[$]: 121803208
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 51428321 bytes to primary EBWT file: haliotis_gen.rev.1.bt2
Wrote 30450808 bytes to secondary EBWT file: haliotis_gen.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 121803208
    bwtLen: 121803209
    sz: 30450802
    bwtSz: 30450803
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 7612701
    offsSz: 30450804
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 634392
    numLines: 634392
    ebwtTotLen: 40601088
    ebwtTotSz: 40601088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:03:39
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:
	LANGUAGE = (unset),
	LC_ALL = (unset),
	LANG = "en_US.UTF-8"
    are supported and installed on your system.
perl: warning: Falling back to the standard locale ("C").
Error: Could not open alignment output file .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam
Error: Encountered internal Bowtie 2 exception (#1)
Command: /usr/bin/bowtie2-align-s --wrapper basic-0 -x haliotis_gen -S .sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam.sam -U 373_4_1_C1802ACXX_TGACCA_L002_trim.fastq.gz 
(ERR): bowtie2-align exited with value 1
Settings:
  Output files: "haliotis_gen.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  haliotis_genome.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 30450802
Using parameters --bmax 22838102 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 22838102 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:06
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.74005e+07 (target: 22838101)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (22838102) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 22771479 for bucket 1
  (Using difference cover)
=>> PBS: job killed: walltime 86489 exceeded limit 86400
